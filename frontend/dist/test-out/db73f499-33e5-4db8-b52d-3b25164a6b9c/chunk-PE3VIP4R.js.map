{
  "version": 3,
  "sources": ["angular:jit:template:src/app/Hr/hr-component/hr-component.html", "angular:jit:style:src/app/Hr/hr-component/hr-component.css", "src/app/Hr/hr-component/hr-component.ts"],
  "sourcesContent": ["<div class=\"row row-cols-4\">\n  <div class=\"col\" *ngFor=\"let item of newEmployee\">\n    <div class=\"card\" style=\"width: 18rem;\">\n      <div class=\"card-body\">\n        <h5 class=\"card-title mt-2\">{{ item.name }}</h5>\n        <h6 class=\"card-subtitle mb-2 text-body-secondary\">+91-{{ item.contactNo }}</h6>\n        <h6 class=\"card-subtitle mb-2 text-body-secondary\">{{ item.email }}</h6>\n        <div class=\"d-flex gap-3 p-3\">\n          <select #roleRef class=\"form-select\">\n            <option value=\"User\">User</option>\n            <option value=\"Admin\">Admin</option>\n          </select>\n          <select #deptRef class=\"form-select\">\n            <option value=\"Engineering\">Engineering</option>\n            <option value=\"Marketing\">Marketing</option>\n            <option value=\"HR\">HR</option>\n          </select>\n        </div>\n\n        <div class=\"d-flex gap-3 mt-3\">\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"addNewEmployee(item, roleRef.value, deptRef.value)\">Add Employee</button>\n          <button type=\"button\" class=\"btn btn-danger\" (click)=\"reject(item)\">Reject</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n", "/* src/app/Hr/hr-component/hr-component.css */\n/*# sourceMappingURL=hr-component.css.map */\n", "import { Component } from '@angular/core';\nimport { EmployeeModel } from '../../models/Employee';\nimport { HrService } from '../../service/hr';\nimport { CookieService } from 'ngx-cookie-service';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule,FormGroup,FormControl } from '@angular/forms';\nimport { employeeService } from '../../service/employee-service';\nimport { ToastrService } from 'ngx-toastr';\n@Component({\n  selector: 'app-hr-component',\n  imports: [CommonModule,ReactiveFormsModule],\n  templateUrl: './hr-component.html',\n  styleUrl: './hr-component.css'\n})\nexport class HrComponent {\n     newEmployee  !:EmployeeModel[];\n     department='unknown';\n    \n      newEmployeeCount !:0;\n       newEmpForm = new FormGroup({\n role: new FormControl(),\n  department: new FormControl(),\n  employeeObj:new FormControl()\n });\n     constructor(private toasterService:ToastrService,private hrService:HrService,private employeeService:employeeService,private cookieService: CookieService){};\n   ngOnInit(){\n    this.getNewEmployee();\n    this.isHr();\n   }\n      isHr(){\n    return this.department==\"HR\";\n   }\n\n   getNewEmployee():void{\n  this.hrService.getNewEmployee().subscribe({\n    next:(res:any)=>{\n      this.newEmployee=res.data;\n      this.newEmployeeCount=res.count;\n      console.log(\"Employee count is \",this.newEmployeeCount);\n      console.log(\"Employee count is \",this.newEmployee);\n    },\n    error:(err)=>{\n      console.error('Error fetching new employee data',err);\n    }\n  })\n}  \n\naddNewEmployee(employee:any,role:string,department:string):void{ \nemployee.department=department;\nemployee.role=role;\nthis.hrService.addNewEmployee(employee).subscribe({\n  next:(res:any)=>{\n    console.log(employee);\n this.toasterService.success('Employee Added Succeesfully',\"Success\");\n     this.newEmployee = this.newEmployee.filter(e => e.email !== employee.email);\n\n console.log(res);\n  },\n     error:(err)=>{\n       this.toasterService.error('Something Wents Wrong ',\"Failed\");\n    }\n})\n}\n\nreject(employee:any):void{\n    this.hrService.deleteNewEmployee(employee).subscribe({\n      next:(res:any)=>{\n        console.log(\"User delete sucessfully\");\nthis.toasterService.error(\"Employee Removed sucessfully\");\n     this.newEmployee = this.newEmployee.filter(e => e.email !== employee.email);\n\n      }, error:(err)=>{\n       this.toasterService.error('Something Wents Wrong ',\"Failed\");\n    }\n\n    })\n}\n\n}\n"],
  "mappings": "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",
  "names": ["hr_component_default", "init_hr_component", "cov_15d34gmqpf", "actualCoverage", "HrComponent", "s", "toasterService", "hrService", "employeeService", "cookieService", "newEmployee", "department", "newEmployeeCount", "newEmpForm", "FormGroup", "role", "FormControl", "employeeObj", "constructor", "f", "ngOnInit", "getNewEmployee", "isHr", "subscribe", "next", "res", "data", "count", "console", "log", "error", "err", "addNewEmployee", "employee", "success", "filter", "e", "email", "reject", "deleteNewEmployee", "__decorate", "Component", "selector", "imports", "CommonModule", "ReactiveFormsModule", "template", "__NG_CLI_RESOURCE__0"]
}
