{
  "version": 3,
  "sources": ["src/app/service/hr.spec.ts"],
  "sourcesContent": ["import { TestBed } from '@angular/core/testing';\nimport { provideHttpClientTesting, HttpTestingController } from '@angular/common/http/testing';\nimport { HrService } from './hr';\n\ndescribe('HrService', () => {\n  let service: HrService;\n  let httpMock: HttpTestingController;\n\n  beforeEach(() => {\n    TestBed.configureTestingModule({\n      providers: [\n        HrService,\n        provideHttpClientTesting() // âœ… Modern way\n      ]\n    });\n\n    service = TestBed.inject(HrService);\n    httpMock = TestBed.inject(HttpTestingController);\n  });\n\n  afterEach(() => {\n    httpMock.verify(); // ensure no pending requests\n  });\n\n  it('should be created', () => {\n    expect(service).toBeTruthy();\n  });\n\n  it('should call getNewEmployee API with GET method', () => {\n    const mockResponse: any = [\n      {\n        id: 1,\n        name: 'Chetan Padhen',\n        email: 'chetan@consultadd.com',\n        contactNo: '8010793506',\n      }\n    ];\n\n    service.getNewEmployee().subscribe(data => {\n      expect(data).toEqual(mockResponse);\n    });\n\n    const req = httpMock.expectOne('http://localhost:8080/hr/getEmployeesWithoutDepartment');\n    expect(req.request.method).toBe('GET');\n    req.flush(mockResponse);\n  });\n});\n"],
  "mappings": ";;;;;;;;;;;;;;;;;AAAA;AAEA;AAEA,SAAS,aAAa,MAAK;AACzB,MAAI;AACJ,MAAI;AAEJ,aAAW,MAAK;AACd,YAAQ,uBAAuB;MAC7B,WAAW;QACT;QACA,yBAAwB;;;KAE3B;AAED,cAAU,QAAQ,OAAO,SAAS;AAClC,eAAW,QAAQ,OAAO,qBAAqB;EACjD,CAAC;AAED,YAAU,MAAK;AACb,aAAS,OAAM;EACjB,CAAC;AAED,KAAG,qBAAqB,MAAK;AAC3B,WAAO,OAAO,EAAE,WAAU;EAC5B,CAAC;AAED,KAAG,kDAAkD,MAAK;AACxD,UAAM,eAAoB;MACxB;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,WAAW;;;AAIf,YAAQ,eAAc,EAAG,UAAU,UAAO;AACxC,aAAO,IAAI,EAAE,QAAQ,YAAY;IACnC,CAAC;AAED,UAAM,MAAM,SAAS,UAAU,wDAAwD;AACvF,WAAO,IAAI,QAAQ,MAAM,EAAE,KAAK,KAAK;AACrC,QAAI,MAAM,YAAY;EACxB,CAAC;AACH,CAAC;",
  "names": []
}
