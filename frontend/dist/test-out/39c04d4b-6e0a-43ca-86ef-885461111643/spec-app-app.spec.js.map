{
  "version": 3,
  "sources": ["angular:jit:template:src/app/app.html", "angular:jit:style:src/app/app.css", "src/app/validators/AuthStatusService.ts", "src/app/app.ts", "src/app/app.spec.ts"],
  "sourcesContent": ["\n<main class=\"p-2 d-flex justify-content-between\">\n <div>\n    <img src=\"/consultAdd.svg\" class=\"\" alt=\"\"> \n </div >\n\n<div *ngIf=\"!isUserLoggedIn()\" class=\"mx-2 gap-3 d-flex\">\n  <button class=\"btn btn-outline-primary flex-grow-1 px-3\" [routerLink]=\"['/login']\">\n    Login\n  </button>\n  <button class=\"btn btn-outline-success flex-grow-1 px-3\" [routerLink]=\"['/signup']\">\n    SignUp\n  </button>     \n</div>\n\n<div *ngIf=\"isUserLoggedIn()\" class=\"mx-2 gap-3 d-flex\">\n  <button (click)=\"logout()\" class=\"btn btn-outline-danger flex-grow-1 px-3\">\n    Logout\n  </button>\n</div>\n\n\n</main>\n\n\n<router-outlet />\n", "/* src/app/app.css */\n/*# sourceMappingURL=app.css.map */\n", "// src/app/services/auth-status.service.ts\n\nimport { Injectable } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthStatusService {\n\n  constructor(private cookieService: CookieService) {}\n\n  isLoggedIn(): boolean {\n    const token = this.cookieService.get('token'); // or use localStorage.getItem('token')\n    return !!token;\n  }\n}\n", "import { Component, signal } from '@angular/core';\nimport { Router, RouterOutlet } from '@angular/router';\nimport { Login } from './login/login';\nimport { FormsModule } from '@angular/forms';\nimport { Home } from './home/home';\nimport { RouterLink } from '@angular/router';\nimport { employeeService } from './service/employee-service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Dashboard } from './dashboard/dashboard';\nimport { AuthStatusService } from './validators/AuthStatusService';\nimport { CommonModule } from '@angular/common';\n@Component({\n  selector: 'app-root',\n  imports: [RouterOutlet,RouterLink,FormsModule,CommonModule],\n  templateUrl: './app.html',\n  styleUrl: './app.css'\n})\nexport class App {\n\n  constructor(private router:Router,private authStatus:AuthStatusService,private employeeService:employeeService,private cookieService :CookieService){}\n\nngOnInit() {\n\n  }\n  protected readonly title = signal('my-app');\n  \n  isUserLoggedIn(): boolean {\n  return this.authStatus.isLoggedIn();\n}\n\n logout(): void {\n    this.cookieService.delete('token');\n    this.router.navigate(['/login']);\n  }\n}\n", "import { TestBed } from '@angular/core/testing';\nimport { App } from './app';\n\ndescribe('App', () => {\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      imports: [App],\n    }).compileComponents();\n  });\n\n  it('should create the app', () => {\n    const fixture = TestBed.createComponent(App);\n    const app = fixture.componentInstance;\n    expect(app).toBeTruthy();\n  });\n\n  it('should render title', () => {\n    const fixture = TestBed.createComponent(App);\n    fixture.detectChanges();\n    const compiled = fixture.nativeElement as HTMLElement;\n    expect(compiled.querySelector('h1')?.textContent).toContain('Hello, my-app');\n  });\n});\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,IAAAA;AAAA,IAAAC,YAAA;AAAA;AAAA,IAAAD,eAAA;AAAA;AAAA;;;ACAA,IAQa;AARb;;;;AAEA;AACA;AAKO,IAAM,oBAAN,MAAME,mBAAiB;MAER;MAApB,YAAoB,eAA4B;AAA5B,aAAA,gBAAA;MAA+B;MAEnD,aAAU;AACR,cAAM,QAAQ,KAAK,cAAc,IAAI,OAAO;AAC5C,eAAO,CAAC,CAAC;MACX;;;;;AAPW,wBAAiB,WAAA;MAH7B,WAAW;QACV,YAAY;OACb;OACY,iBAAiB;;;;;ICSjB;;;;;;;AAjBb;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAOO,IAAM,MAAN,MAAMC,KAAG;MAEM;MAAsB;MAAqC;MAAwC;MAAvH,YAAoB,QAAsB,YAAqCC,kBAAwC,eAA4B;AAA/H,aAAA,SAAA;AAAsB,aAAA,aAAA;AAAqC,aAAA,kBAAAA;AAAwC,aAAA,gBAAA;MAA8B;MAEvJ,WAAQ;MAEN;MACmB,QAAQ,OAAO,QAAQ;MAE1C,iBAAc;AACd,eAAO,KAAK,WAAW,WAAU;MACnC;MAEC,SAAM;AACH,aAAK,cAAc,OAAO,OAAO;AACjC,aAAK,OAAO,SAAS,CAAC,QAAQ,CAAC;MACjC;;;;;;;;AAhBW,UAAG,WAAA;MANf,UAAU;QACT,UAAU;QACV,SAAS,CAAC,cAAa,YAAW,aAAY,YAAY;QAC1D,UAAA;;OAED;OACY,GAAG;;;;;ACjBhB;;;AACA,IAAAC;AAEA,aAAS,OAAO,MAAK;AACnB,iBAAW,MAAW;AACpB,cAAM,QAAQ,uBAAuB;UACnC,SAAS,CAAC,GAAG;SACd,EAAE,kBAAiB;MACtB,EAAC;AAED,SAAG,yBAAyB,MAAK;AAC/B,cAAM,UAAU,QAAQ,gBAAgB,GAAG;AAC3C,cAAM,MAAM,QAAQ;AACpB,eAAO,GAAG,EAAE,WAAU;MACxB,CAAC;AAED,SAAG,uBAAuB,MAAK;AAC7B,cAAM,UAAU,QAAQ,gBAAgB,GAAG;AAC3C,gBAAQ,cAAa;AACrB,cAAM,WAAW,QAAQ;AACzB,eAAO,SAAS,cAAc,IAAI,GAAG,WAAW,EAAE,UAAU,eAAe;MAC7E,CAAC;IACH,CAAC;;;",
  "names": ["app_default", "init_app", "AuthStatusService", "App", "employeeService", "init_app"]
}
