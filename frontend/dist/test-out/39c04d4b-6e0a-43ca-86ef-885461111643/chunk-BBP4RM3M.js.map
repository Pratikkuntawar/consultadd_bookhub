{
  "version": 3,
  "sources": ["angular:jit:template:src/app/login/login.html", "angular:jit:style:src/app/login/login.css", "src/app/login/login.ts"],
  "sourcesContent": ["<main class=\"main d-flex justify-content-center align-items-center vh-100r\">\n \n<div class=\"p-5 border d-flex flex-column rounded bg-white shadow mt-5\" style=\"min-width: 500px; min-height: 600px;\">\n  \n    <form [formGroup]=\"empForm\" (ngSubmit)=\"onSubmit()\">\n\n  <h2  style=\"margin-bottom: 60px; text-align:center;\">Login Form </h2>\n  \n <div class=\"d-flex align-items-center gap-5 mb-2 \">\n    <label  class=\"mb-0\">Email</label>\n    <div class=\"w-100 mt-2\">\n    <input id=\"email\" type=\"email\" formControlName=\"email\" class=\"form-control w-75\" placeholder=\"Enter your Email\" ngModel>\n    <div class=\"text-danger lh-sm\" style=\"font-size: 13px;margin-left: 9px;\" *ngIf=\"empForm.controls['email'].invalid && (empForm.controls['email'].touched || empForm.controls['email'].dirty)\">\n    <label class=\"text-danger\" *ngIf=\"empForm.controls['email'].errors?.['required']\">Email required</label>\n    <label class=\"text-danger\" *ngIf=\"empForm.controls['email'].errors?.['emailStartError']\">Email can't start with number</label>\n    <label class=\"text-danger\" *ngIf=\"empForm.controls['email'].errors?.['emailDomainError']\">Invalid Email domain</label>\n    </div>\n  </div>\n  </div>\n\n\n  <div class=\"d-flex align-items-center gap-3\">\n    <label for=\"password\" class=\"mb-0\">Password</label>\n       <div class=\"w-100 mt-2\">\n    <input id=\"password\" type=\"password\" formControlName=\"password\" class=\"form-control w-75\" placeholder=\"Enter your password\" ngModel>\n   <div class=\"text-danger lh-sm\" style=\"font-size: 13px;margin-left: 9px;margin-top: 2px;\" *ngIf=\"empForm.controls['password'].invalid && (empForm.controls['password'].touched || empForm.controls['password'].dirty)\">\n  <label class=\"text-danger\" *ngIf=\"empForm.controls['password'].errors?.['pattern']\">Contact No. cannot be  other than digit</label>\n        <label class=\"text-danger\" *ngIf=\"empForm.controls['password'].errors?.['required']\">password. required</label>\n    <label class=\"text-danger\" *ngIf=\"empForm.controls['password'].errors?.['minlength']\">password at least 6 size</label>\n    </div>\n  </div>\n  </div>\n<div class=\"row m-5\">\n  <button class=\"btn btn-primary flex-grow-1 px-3\" type=\"submit\" [disabled]=\"empForm.invalid\">Login</button>\n  <h3 class=\"my-3 w-100 h-100\" style=\"text-align: center;\">Or</h3>\n  <button class=\"btn btn-primary flex-grow-1 px-3\" type=\"button\" [routerLink]=\"['/signup']\" >Register</button>\n</div>\n\n</form>\n</div>\n\n</main>", "/* src/app/login/login.css */\n/*# sourceMappingURL=login.css.map */\n", "import { Component } from '@angular/core';\nimport { FormControl, FormGroup, FormsModule ,Validators} from '@angular/forms';\nimport { RouterLink } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { StudentLogin } from '../models/studentLogin';\nimport { Auth } from '../service/auth';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport EmailDomainValidator from '../validators/emailValidator';\nimport { CommonModule } from '@angular/common';\n@Component({\n  selector: 'app-login',\n  imports: [FormsModule,RouterLink,ReactiveFormsModule,CommonModule],\n  templateUrl: './login.html',\n  styleUrl: './login.css'\n})\nexport class Login {\n\n  allowedDomain =[\"consultadd.com\",\"hyperflex.com\",\"knowcloudai.com\"];\n  constructor(private authSevice:Auth,private toasterService:ToastrService,private cookieService:CookieService,private router:Router){}\n empForm = new FormGroup({\n  email: new FormControl('', {\n    validators: [Validators.required,EmailDomainValidator(this.allowedDomain)],\n  }),\n  password: new FormControl('', {\n    validators: [Validators.required,Validators.minLength(6)],\n  })\n });\n  onSubmit(){\n    const formData = this.empForm.value as StudentLogin;\n  \n    console.log(\"Function called after onsubmit\"+formData);\n    this.authSevice.login(formData).subscribe({\n  next: (res) =>{ \n   this.cookieService.set(\"token\",res.token,{path:'/'});\n   this.toasterService.success('Login Successfuly',\"Success\");\n  this.router.navigate(['/dashboard']);\n  },\n  error: (err) => {console.error('Login error', err);\n       this.toasterService.error('Invalid Credentials',\"Failed\");\n     this.router.navigate(['/login']);\n  }\n  \n});\n    \n  }\n\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,IAAAA;AAAA,IAAAC,cAAA;AAAA;AAAA,IAAAD,iBAAA;AAAA;AAAA;;;ICiBa;;;;;;;AAjBb;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAOO,IAAM,QAAN,MAAME,OAAK;MAGI;MAAwB;MAAqC;MAAoC;MADrH,gBAAe,CAAC,kBAAiB,iBAAgB,iBAAiB;MAClE,YAAoB,YAAwB,gBAAqC,eAAoC,QAAa;AAA9G,aAAA,aAAA;AAAwB,aAAA,iBAAA;AAAqC,aAAA,gBAAA;AAAoC,aAAA,SAAA;MAAe;MACrI,UAAU,IAAI,UAAU;QACvB,OAAO,IAAI,YAAY,IAAI;UACzB,YAAY,CAAC,WAAW,UAAS,qBAAqB,KAAK,aAAa,CAAC;SAC1E;QACD,UAAU,IAAI,YAAY,IAAI;UAC5B,YAAY,CAAC,WAAW,UAAS,WAAW,UAAU,CAAC,CAAC;SACzD;OACD;MACA,WAAQ;AACN,cAAM,WAAW,KAAK,QAAQ;AAE9B,gBAAQ,IAAI,mCAAiC,QAAQ;AACrD,aAAK,WAAW,MAAM,QAAQ,EAAE,UAAU;UAC5C,MAAM,CAAC,QAAO;AACb,iBAAK,cAAc,IAAI,SAAQ,IAAI,OAAM,EAAC,MAAK,IAAG,CAAC;AACnD,iBAAK,eAAe,QAAQ,qBAAoB,SAAS;AAC1D,iBAAK,OAAO,SAAS,CAAC,YAAY,CAAC;UACnC;UACA,OAAO,CAAC,QAAO;AAAE,oBAAQ,MAAM,eAAe,GAAG;AAC5C,iBAAK,eAAe,MAAM,uBAAsB,QAAQ;AAC1D,iBAAK,OAAO,SAAS,CAAC,QAAQ,CAAC;UAClC;SAED;MAEC;;;;;;;;AA7BW,YAAK,WAAA;MANjB,UAAU;QACT,UAAU;QACV,SAAS,CAAC,aAAY,YAAW,qBAAoB,YAAY;QACjE,UAAA;;OAED;OACY,KAAK;;;",
  "names": ["login_default", "init_login", "Login"]
}
