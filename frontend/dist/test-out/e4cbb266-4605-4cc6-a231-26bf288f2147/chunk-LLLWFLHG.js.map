{
  "version": 3,
  "sources": ["angular:jit:template:src/app/signup/signup.html", "angular:jit:style:src/app/signup/signup.css", "src/app/signup/signup.ts"],
  "sourcesContent": ["<!-- <div class=\"modal-backdrop show\">\n  <div class=\"modal d-block\" tabindex=\"-1\">\n    <div class=\"modal-dialog modal-dialog-centered\">\n      <div class=\"modal-content text-center p-4\">\n        <h5 class=\"modal-title\">Signup</h5>\n        <form>\n          <input type=\"text\" class=\"form-control mb-2\" placeholder=\"Enter Name\" />\n          <input type=\"email\" class=\"form-control mb-2\" placeholder=\"Enter Email\" />\n          <input type=\"password\" class=\"form-control mb-2\" placeholder=\"Enter Password\" />\n          <button type=\"submit\" class=\"btn btn-primary\" (click)=\"moveToLoginRoute()\">Register</button>\n          <button type=\"button\" class=\"btn btn-danger ms-2\" (click)=\"handleClose()\">Close</button>\n        </form>\n        <p class=\"mt-3 text-muted\">\n          Already have an account? <a href=\"#\" (click)=\"goToLogin()\">Login here</a>\n        </p>\n      </div>\n    </div>\n  </div>\n</div> -->\n\n\n\n\n<!-- new signup form -->\n <!-- <div class=\"modal-backdrop show\">\n  <div class=\"modal d-block\" tabindex=\"-1\">\n    <div class=\"modal-dialog modal-dialog-centered\">\n      <div class=\"modal-content text-center p-4 bg-dark text-light rounded custom-modal-content\">\n        <h5 class=\"modal-title mb-4 fw-bold\">Signup</h5>\n        <form (ngSubmit)=\"registerUser()\" class=\"needs-validation\" novalidate>\n          \n          <div class=\"form-group mb-3\">\n            <input type=\"text\" class=\"form-control text-center\" placeholder=\"Enter Full Name\" [(ngModel)]=\"signupData.fullName\" name=\"fullName\" required />\n          </div>\n          \n          <div class=\"form-group mb-3\">\n            <input type=\"email\" class=\"form-control text-center\" placeholder=\"Enter Email\" [(ngModel)]=\"signupData.email\" name=\"email\" required />\n          </div>\n          \n          <div class=\"form-group mb-3\">\n            <input type=\"password\" class=\"form-control text-center\" placeholder=\"Enter Password\" [(ngModel)]=\"signupData.password\" name=\"password\" required />\n          </div>\n\n          <div class=\"form-group mb-3\">\n            <select class=\"form-select text-center\" [(ngModel)]=\"signupData.role\" name=\"role\" required>\n              <option value=\"\" disabled selected>Select Role</option>\n              <option value=\"BUYER\">Buyer</option>\n              <option value=\"SELLER\">Seller</option>\n            </select>\n          </div>\n\n          <div class=\"form-group mb-4\">\n            <select class=\"form-select text-center\" [(ngModel)]=\"signupData.department\" name=\"department\" required>\n              <option value=\"\" disabled selected>Select Department</option>\n              <option value=\"HR\">HR</option>\n              <option value=\"CODING\">Coding</option>\n              <option value=\"DELIVERY\">Delivery</option>\n              <option value=\"SALES\">Sales</option>\n              <option value=\"MARKETING\">Marketing</option>\n            </select>\n          </div>\n\n          <div class=\"d-grid gap-2 d-md-flex justify-content-center\">\n            <button type=\"submit\" class=\"btn btn-outline-primary px-4\">Register</button>\n            <button type=\"button\" class=\"btn btn-outline-danger px-4\" (click)=\"handleClose()\">Close</button>\n          </div>\n        </form>\n\n        <p class=\"mt-4 text-dark small\">\n          Already have an account? \n          <a  class=\"text-info fw-semibold\" (click)=\"moveToLoginRoute() \">Login here</a>\n        </p>\n      </div>\n    </div>\n  </div>\n</div> -->\n\n\n\n\n\n\n\n\n\n\n\n\n\n<div class=\"modal-backdrop show\">\n  <div class=\"modal d-block\" tabindex=\"-1\">\n    <div class=\"modal-dialog modal-dialog-centered\">\n      <div class=\"modal-content text-center p-4 bg-dark text-light rounded custom-modal-content\">\n        <h5 class=\"modal-title mb-4 fw-bold\">Signup</h5>\n\n        <form #signupForm=\"ngForm\" (ngSubmit)=\"registerUser()\" class=\"needs-validation\" novalidate>\n\n          <!-- Full Name -->\n          <div class=\"form-group mb-3\">\n            <input \n              type=\"text\" \n              class=\"form-control text-center\" \n              placeholder=\"Enter Full Name\" \n              name=\"fullName\" \n              required \n              [(ngModel)]=\"signupData.fullName\"\n              #fullNameRef=\"ngModel\" />\n            <small class=\"text-danger\" *ngIf=\"fullNameRef.invalid && fullNameRef.touched\">\n              Full name is required.\n            </small>\n          </div>\n\n          <!-- Email -->\n          <div class=\"form-group mb-3\">\n            <input \n              type=\"email\" \n              class=\"form-control text-center\" \n              placeholder=\"Enter Email\" \n              name=\"email\" \n              required \n              pattern=\"^[a-zA-Z0-9._%+-]+@consultadd\\.com$\"\n              [(ngModel)]=\"signupData.email\"\n              #emailRef=\"ngModel\" />\n            <small class=\"text-danger\" *ngIf=\"emailRef.invalid && emailRef.touched\">\n              Valid Consultadd email is required \n            </small>\n          </div>\n\n          <!-- Password -->\n          <div class=\"form-group mb-3\">\n            <input \n              type=\"password\" \n              class=\"form-control text-center\" \n              placeholder=\"Enter Password\" \n              name=\"password\" \n              required \n              minlength=\"6\"\n              [(ngModel)]=\"signupData.password\"\n              #passwordRef=\"ngModel\" />\n            <small class=\"text-danger\" *ngIf=\"passwordRef.invalid && passwordRef.touched\">\n              Password is required (min 6 characters).\n            </small>\n          </div>\n\n          <!-- Role -->\n          <div class=\"form-group mb-3\">\n            <select \n              class=\"form-select text-center\" \n              name=\"role\" \n              required \n              [(ngModel)]=\"signupData.role\"\n              #roleRef=\"ngModel\">\n              <option value=\"\" disabled selected>Select Role</option>\n              <option value=\"BUYER\">Buyer</option>\n              <option value=\"SELLER\">Seller</option>\n            </select>\n            <small class=\"text-danger\" *ngIf=\"roleRef.invalid && roleRef.touched\">\n              Role is required.\n            </small>\n          </div>\n\n          <!-- Department -->\n          <div class=\"form-group mb-4\">\n            <select \n              class=\"form-select text-center\" \n              name=\"department\" \n              required \n              [(ngModel)]=\"signupData.department\"\n              #departmentRef=\"ngModel\">\n              <option value=\"\" disabled selected>Select Department</option>\n              <option value=\"HR\">HR</option>\n              <option value=\"CODING\">Coding</option>\n              <option value=\"DELIVERY\">Delivery</option>\n              <option value=\"SALES\">Sales</option>\n              <option value=\"MARKETING\">Marketing</option>\n            </select>\n            <small class=\"text-danger\" *ngIf=\"departmentRef.invalid && departmentRef.touched\">\n              Department is required.\n            </small>\n          </div>\n\n          <!-- Buttons -->\n          <div class=\"d-grid gap-2 d-md-flex justify-content-center\">\n            <button \n              type=\"submit\" \n              class=\"btn btn-outline-primary px-4\" \n              [disabled]=\"signupForm.invalid\">\n              Register\n            </button>\n            <button \n              type=\"button\" \n              class=\"btn btn-outline-danger px-4\" \n              (click)=\"handleClose()\">\n              Close\n            </button>\n          </div>\n        </form>\n\n        <p class=\"mt-4 text-dark small\">\n          Already have an account? \n          <a class=\"text-info fw-semibold\" (click)=\"moveToLoginRoute()\">Login here</a>\n        </p>\n      </div>\n    </div>\n  </div>\n</div>\n", "/* src/app/signup/signup.css */\n.custom-modal-content {\n  width: 100%;\n  max-width: 420px;\n  margin: auto;\n  border-radius: 12px;\n  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.6);\n  background-color: #1e1e1e !important;\n}\ninput::placeholder,\nselect option {\n  text-align: center;\n  color: #ccc;\n}\ninput:focus,\nselect:focus {\n  border-color: #0d6efd;\n  box-shadow: 0 0 5px rgba(13, 110, 253, 0.5);\n}\n.form-control,\n.form-select {\n  background-color: #2c2c2c;\n  color: #fff;\n  border: 1px solid #444;\n}\n.btn-outline-primary,\n.btn-outline-danger {\n  border-radius: 25px;\n}\n.btn-outline-primary:hover,\n.btn-outline-danger:hover {\n  box-shadow: 0 0 8px rgba(255, 255, 255, 0.3);\n}\na.text-info:hover {\n  text-decoration: underline;\n}\n.modal-backdrop {\n  background-color: rgba(0, 0, 0, 0.9);\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  z-index: 1040;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.custom-modal-content {\n  background-color: white !important;\n  color: #333 !important;\n  border-radius: 20px;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);\n  animation: popIn 0.4s ease-out;\n}\n@keyframes popIn {\n  0% {\n    opacity: 0;\n    transform: scale(0.8);\n  }\n  100% {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n.custom-modal-content input,\n.custom-modal-content select {\n  border: 1px solid #ccc;\n  border-radius: 8px;\n  padding: 10px;\n  font-size: 1rem;\n}\n.custom-modal-content button {\n  border-radius: 8px;\n  transition: all 0.3s ease;\n}\n.custom-modal-content button:hover {\n  transform: scale(1.05);\n}\n.custom-modal-content a {\n  color: #007bff;\n  text-decoration: none;\n}\n.custom-modal-content a:hover {\n  text-decoration: underline;\n}\n/*# sourceMappingURL=signup.css.map */\n", "\nimport { CommonModule } from '@angular/common';\nimport { HttpClient } from '@angular/common/http';\nimport { Component, EventEmitter, Output } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-signup',\n  imports: [CommonModule, FormsModule ],\n  templateUrl: './signup.html',\n  styleUrls: ['./signup.css']\n})\nexport class SignupComponent {\n  constructor(private http: HttpClient, private router: Router) {}\n\n  signupData = {\n    fullName: '',\n    email: '',\n    password: '',\n    role: '',\n    department: ''\n  };\n\n  handleClose() {\n   this.router.navigate(['/']); \n  }\n\n//   registerUser() {\n//     const apiUrl = 'http://localhost:8080/consultadd/auth/register'; // ✅ Replace with your backend endpoint\n\n//     this.http.post(apiUrl, this.signupData).subscribe({\n//       next: (response) => {\n//         console.log('Registration successful:', response);\n//         // alert('Registered successfully!');\n//         Swal.fire({\n//   icon: 'success',\n//   title: 'Success!',\n//   text: 'Regiter successfully.',\n// });\n//         //this.moveToLoginRoute();\n//         this.router.navigate(['/login']);\n//       },\n//       error: (error) => {\n//         console.error('Registration failed:', error);\n//          alert('Registration failed. Please try again.');\n//       }\n//     });\n//   }\n\n// registerUser() {\n//   const apiUrl = 'http://localhost:8080/consultadd/auth/register';\n\n//   this.http.post(apiUrl, this.signupData).subscribe({\n//     next: (response) => {\n//       console.log('Registration successful:', response);\n\n//       // Show success alert, then navigate to login page\n//       Swal.fire({\n//         icon: 'success',\n//         title: 'Success!',\n//         text: 'Registered successfully.',\n        \n//       }).then((result) => {\n//         if (result.isConfirmed) {\n//           this.router.navigate(['/login']);\n//         }\n//       });\n//     },\n//     error: (error) => {\n//       console.error('Registration failed:', error);\n//       Swal.fire({\n//         icon: 'error',\n//         title: 'Registration Failed',\n//         text: 'Please try again.',\n//       });\n//     }\n//   });\n// }\nregisterUser() {\n  const apiUrl = 'http://localhost:8080/consultadd/auth/register';\n\n  this.http.post(apiUrl, this.signupData).subscribe({\n    next: (response) => {\n      console.log('Registration successful:', response);\n\n      // Auto-close after 2 seconds and then navigate\n      Swal.fire({\n        icon: 'success',\n        title: 'Success!',\n        text: 'Registered successfully.',\n        timer: 2000,\n        showConfirmButton: false,\n        timerProgressBar: true\n      }).then(() => {\n        this.router.navigate(['/login']);\n      });\n    },\n    error: (error) => {\n      console.error('Registration failed:', error);\n      Swal.fire({\n        icon: 'error',\n        title: 'Registration Failed',\n        text: 'Please try again.',\n        timer: 2000,\n        showConfirmButton: false,\n        timerProgressBar: true\n      });\n    }\n  });\n}\n\n\n  moveToLoginRoute() {\n    this.router.navigate(['/login']);\n  }\n}\n\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,IAAAA;AAAA,IAAAC,eAAA;AAAA;AAAA,IAAAD,kBAAA;AAAA;AAAA;;;ICMA,oBAQa;;;;;;;AAbb;AACA;AACA;AACA;AACA;AACA,yBAAiB;AAQV,IAAM,kBAAN,MAAME,iBAAe;MACN;MAA0B;MAA9C,YAAoB,MAA0B,QAAc;AAAxC,aAAA,OAAA;AAA0B,aAAA,SAAA;MAAiB;MAE/D,aAAa;QACX,UAAU;QACV,OAAO;QACP,UAAU;QACV,MAAM;QACN,YAAY;;MAGd,cAAW;AACV,aAAK,OAAO,SAAS,CAAC,GAAG,CAAC;MAC3B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAqDF,eAAY;AACV,cAAM,SAAS;AAEf,aAAK,KAAK,KAAK,QAAQ,KAAK,UAAU,EAAE,UAAU;UAChD,MAAM,CAAC,aAAY;AACjB,oBAAQ,IAAI,4BAA4B,QAAQ;AAGhD,+BAAAC,QAAK,KAAK;cACR,MAAM;cACN,OAAO;cACP,MAAM;cACN,OAAO;cACP,mBAAmB;cACnB,kBAAkB;aACnB,EAAE,KAAK,MAAK;AACX,mBAAK,OAAO,SAAS,CAAC,QAAQ,CAAC;YACjC,CAAC;UACH;UACA,OAAO,CAAC,UAAS;AACf,oBAAQ,MAAM,wBAAwB,KAAK;AAC3C,+BAAAA,QAAK,KAAK;cACR,MAAM;cACN,OAAO;cACP,MAAM;cACN,OAAO;cACP,mBAAmB;cACnB,kBAAkB;aACnB;UACH;SACD;MACH;MAGE,mBAAgB;AACd,aAAK,OAAO,SAAS,CAAC,QAAQ,CAAC;MACjC;;;;;;AAtGW,sBAAe,WAAA;MAN3B,UAAU;QACT,UAAU;QACV,SAAS,CAAC,cAAc,WAAW;QACnC,UAAA;;OAED;OACY,eAAe;;;",
  "names": ["signup_default", "init_signup", "SignupComponent", "Swal"]
}
