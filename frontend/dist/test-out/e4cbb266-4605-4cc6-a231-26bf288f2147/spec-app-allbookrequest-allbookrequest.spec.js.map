{
  "version": 3,
  "sources": ["angular:jit:template:src/app/allbookrequest/allbookrequest.html", "angular:jit:style:src/app/allbookrequest/allbookrequest.css", "src/app/allbookrequest/allbookrequest.ts", "src/app/allbookrequest/allbookrequest.spec.ts"],
  "sourcesContent": ["<!-- <div class=\"home-container\">\n  <div *ngFor=\"let user of users\" class=\"user-card\">\n    <img src=\"/books.webp\" alt=\"User\" class=\"user-image\">\n    <div class=\"user-details\">\n      <h5>{{ user.name }}</h5>\n      <p>\uD83E\uDDD1\u200D\uD83D\uDCBCUser ID:{{user.id}}</p>\n      <p>\uD83D\uDCE7 Email: {{ user.email }}</p>\n      <p>\uD83D\uDCF1 Department: {{ user.department }}</p>\n      <p>\uD83E\uDDD1\u200D\uD83D\uDCBC Role: {{ user.role }}</p>\n    </div>\n  </div>\n</div> -->\n\n\n\n\n\n\n\n<div class=\"home-container\">\n  <div *ngFor=\"let user of users\" class=\"user-card\">\n    <img src=\"/books.webp\" alt=\"User\" class=\"user-image\">\n    <div class=\"user-details\">\n      <!-- <h5>Book Title:{{ user.title }}</h5>\n      <p>\uD83E\uDDD1\u200D\uD83D\uDCBC Author: {{ user.author}}</p>\n      <p>\uD83D\uDCE7 Reason: {{ user.reason}}</p>\n      <p>\uD83D\uDCF1 Requester ID: {{ user.requester.id}}</p>\n      <p>\uD83E\uDDD1\u200D\uD83D\uDCBC Request BY: {{ user.requester.fullName}}</p>\n      <p>Requester Email:{{user.requester.email}}</p> -->\n      <h5>\uD83D\uDCDA Book Title: {{ user.title }}</h5>\n<p>\u270D\uFE0F Author: {{ user.author }}</p>\n<p>\uD83D\uDCDD Reason: {{ user.reason }}</p>\n<p>\uD83C\uDD94 Requester ID: {{ user.requester.id }}</p>\n<p>\uD83D\uDE4B Request By: {{ user.requester.fullName }}</p>\n<p>\uD83D\uDCE7 Requester Email: {{ user.requester.email }}</p>\n    </div>\n  </div>\n</div>\n", "/* src/app/allbookrequest/allbookrequest.css */\nbody,\n.home-container {\n  background-color: #000000;\n  min-height: 100vh;\n  padding: 1rem;\n}\n.user-card {\n  display: flex;\n  align-items: center;\n  background-color: #ffffff;\n  color: #000000;\n  border-radius: 12px;\n  padding: 16px;\n  margin-bottom: 16px;\n  box-shadow: 0 4px 8px rgba(255, 255, 255, 0.1);\n  width: 100%;\n}\n.user-image {\n  width: 80px;\n  height: 80px;\n  margin-right: 20px;\n  border-radius: 50%;\n  object-fit: cover;\n}\n.user-details h5 {\n  margin: 0 0 8px 0;\n  font-size: 1.25rem;\n}\n.user-details p {\n  margin: 2px 0;\n}\n/*# sourceMappingURL=allbookrequest.css.map */\n", "\n// import { CommonModule } from '@angular/common';\n// import { Component, OnInit } from '@angular/core';\n// import { FormsModule } from '@angular/forms';\n\n// @Component({\n//   selector: 'app-getallusers',\n//   imports: [FormsModule,CommonModule],\n//   templateUrl: './allbookrequest.html',\n//   styleUrl: './allbookrequest.css'\n// })\n// export class Allbookrequest implements OnInit {\n//   users: any[] = [];\n\n//   ngOnInit(): void {\n//     // Dummy User Data\n//     this.users = [\n//       {\n//         id:1,\n//         name: 'John Doe',\n//         email: 'kuntawarpratik4@gmail.com',\n//         department: 'Coding',\n//         role: 'Admin'\n//       },\n//       {\n//         id:2,\n//         name: 'Jane Smith',\n//         email: 'ramlakhan4@gmail.com',\n//         department: 'Coding',\n//         role: 'Buyer'\n//       },\n//       {\n//         id:3,\n//         name: 'Michael Johnson',\n//         email: 'dhruvpatel@gmail.com',\n//         department: 'HR',\n//         role: 'Seller'\n//       },\n//       {\n//         id:4,\n//         name: 'Ram Kapoor',\n//         email: 'ramkapoor@gmail.com',\n//         department: 'HR',\n//         role: 'Seller'\n//       },\n//       {\n//         id:5,\n//         name: 'Rohit Sharma',\n//         email: 'rohitsharma@gmail.com',\n//         department: 'Coding',\n//         role: 'ADMIN'\n//       }\n//     ];\n//   }\n  \n// }\n\n\n\nimport { CommonModule } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Component({\n  selector: 'app-getallusers',\n  standalone: true,\n  imports: [FormsModule, CommonModule],\n  templateUrl: './allbookrequest.html',\n  styleUrl: './allbookrequest.css'\n})\nexport class Allbookrequest implements OnInit {\n  users: any[] = [];\n\n  constructor(private http: HttpClient) {}\n\n  // ngOnInit(): void {\n  //   this.http.get<any[]>('http://localhost:8080/api/book-requests/all').subscribe(\n  //     (response) => {\n  //       this.users = response.map(request => ({\n  //         id: request.requester?.id,\n  //         name: request.requester?.fullName,\n  //         email: request.requester?.email,\n  //         department: request.requester?.department,\n  //         role: request.requester?.role\n  //       }));\n  //     },\n  //     (error) => {\n  //       console.error('Error fetching book requests:', error);\n  //     }\n  //   );\n  // }\n\n  ngOnInit(): void {\n    const token = localStorage.getItem('token');\n    const apiUrl = 'http://localhost:8080/api/book-requests/all';\n    if (token) {\n      const headers = new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      });\n\n      this.http.get<any[]>(apiUrl, { headers }).subscribe({\n        next: (data) => {\n          console.log('Fetched Employees:', data);\n          this.users = data;\n        },\n        error: (error) => {\n          console.error('Failed to fetch employees:', error);\n        }\n      });\n    } else {\n      console.warn('No token found. Please login first.');\n    }\n  }\n}\n", "import { ComponentFixture, TestBed } from '@angular/core/testing';\n\nimport { Allbookrequest } from './allbookrequest';\n\ndescribe('Allbookrequest', () => {\n  let component: Allbookrequest;\n  let fixture: ComponentFixture<Allbookrequest>;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      imports: [Allbookrequest]\n    })\n    .compileComponents();\n\n    fixture = TestBed.createComponent(Allbookrequest);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n});\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,IAAAA;AAAA,IAAAC,uBAAA;AAAA;AAAA,IAAAD,0BAAA;AAAA;AAAA;;;ACCA,IAsEa;AAtEb,IAAAE,uBAAA;;;;;;AA0DA;AACA;AACA;AACA;AASO,IAAM,iBAAN,MAAMC,gBAAc;MAGL;MAFpB,QAAe,CAAA;MAEf,YAAoB,MAAgB;AAAhB,aAAA,OAAA;MAAmB;;;;;;;;;;;;;;;;;MAmBvC,WAAQ;AACN,cAAM,QAAQ,aAAa,QAAQ,OAAO;AAC1C,cAAM,SAAS;AACf,YAAI,OAAO;AACT,gBAAM,UAAU,IAAI,YAAY;YAC9B,gBAAgB;YAChB,iBAAiB,UAAU,KAAK;WACjC;AAED,eAAK,KAAK,IAAW,QAAQ,EAAE,QAAO,CAAE,EAAE,UAAU;YAClD,MAAM,CAAC,SAAQ;AACb,sBAAQ,IAAI,sBAAsB,IAAI;AACtC,mBAAK,QAAQ;YACf;YACA,OAAO,CAAC,UAAS;AACf,sBAAQ,MAAM,8BAA8B,KAAK;YACnD;WACD;QACH,OAAO;AACL,kBAAQ,KAAK,qCAAqC;QACpD;MACF;;;;;AA3CW,qBAAc,WAAA;MAP1B,UAAU;QACT,UAAU;QACV,YAAY;QACZ,SAAS,CAAC,aAAa,YAAY;QACnC,UAAA;;OAED;OACY,cAAc;;;;;ACvE3B;;;AAEA,IAAAC;AAEA,aAAS,kBAAkB,MAAK;AAC9B,UAAI;AACJ,UAAI;AAEJ,iBAAW,MAAW;AACpB,cAAM,QAAQ,uBAAuB;UACnC,SAAS,CAAC,cAAc;SACzB,EACA,kBAAiB;AAElB,kBAAU,QAAQ,gBAAgB,cAAc;AAChD,oBAAY,QAAQ;AACpB,gBAAQ,cAAa;MACvB,EAAC;AAED,SAAG,iBAAiB,MAAK;AACvB,eAAO,SAAS,EAAE,WAAU;MAC9B,CAAC;IACH,CAAC;;;",
  "names": ["allbookrequest_default", "init_allbookrequest", "init_allbookrequest", "Allbookrequest", "init_allbookrequest"]
}
