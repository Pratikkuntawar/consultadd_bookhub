{
  "version": 3,
  "sources": ["angular:jit:template:src/app/campaign-register/campaign-register.html", "angular:jit:style:src/app/campaign-register/campaign-register.css", "src/app/campaign-register/campaign-register.ts", "src/app/campaign-register/campaign-register.spec.ts"],
  "sourcesContent": ["<div class=\"container mt-5\">\n  <h2>Register New Campaign</h2>\n\n  <form [formGroup]=\"campaignForm\" (ngSubmit)=\"onSubmit()\">\n\n    <div class=\"mb-3\">\n      <label class=\"form-label\" for=\"name\">Campaign Name</label>\n      <input id=\"name\" type=\"text\" class=\"form-control\" formControlName=\"name\" />\n      <div class=\"text-danger\" *ngIf=\"campaignForm.get('name')?.touched && campaignForm.get('name')?.invalid\">\n        Name is required\n      </div>\n    </div>\n\n    <div class=\"mb-3\">\n      <label class=\"form-label\" for=\"description\">Description</label>\n      <textarea id=\"description\" class=\"form-control\" rows=\"3\" formControlName=\"description\"></textarea>\n      <div class=\"text-danger\" *ngIf=\"campaignForm.get('description')?.touched && campaignForm.get('description')?.invalid\">\n        Description is required\n      </div>\n    </div>\n\n    <div class=\"mb-3\">\n      <label class=\"form-label\" for=\"start_date\">Start Date</label>\n      <input id=\"start_date\" type=\"date\" class=\"form-control\" formControlName=\"start_date\" />\n    </div>\n\n    <div class=\"mb-3\">\n      <label class=\"form-label\" for=\"end_date\">End Date</label>\n      <input id=\"end_date\" type=\"date\" class=\"form-control\" formControlName=\"end_date\" />\n    </div>\n\n    <div class=\"mb-3\">\n      <label class=\"form-label\" for=\"status\">Status</label>\n      <select id=\"status\" class=\"form-control\" formControlName=\"status\">\n        <option value=\"\">Select status</option>\n        <option value=\"Active\">Active</option>\n        <option value=\"Paused\">Paused</option>\n        <option value=\"Completed\">Completed</option>\n      </select>\n    </div>\n\n    <div class=\"mb-3\">\n      <label class=\"form-label\" for=\"budget\">Budget</label>\n      <input id=\"budget\" type=\"number\" class=\"form-control\" formControlName=\"budget\" />\n      <div class=\"text-danger\" *ngIf=\"campaignForm.get('budget')?.touched && campaignForm.get('budget')?.invalid\">\n        Budget must be greater than 0\n      </div>\n    </div>\n\n    <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!campaignForm.valid\">Register Campaign</button>\n  </form>\n</div>\n", "/* src/app/campaign-register/campaign-register.css */\n/*# sourceMappingURL=campaign-register.css.map */\n", "\nimport { CampaignService } from '../service/campaign-service';\nimport { CommonModule } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CampaignModel } from '../models/CapaignModel';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-campaign-register',\n  imports: [CommonModule,ReactiveFormsModule],\n  templateUrl: './campaign-register.html',\n  styleUrl: './campaign-register.css'\n})\nexport class CampaignRegister {\n  campaignForm!: FormGroup;\n\n  constructor(private router:Router,private fb: FormBuilder,private toasterService:ToastrService, private campaignService: CampaignService) {}\n\ncampaign: CampaignModel = {\n    name: '',\n    description: '',\n    start_date: '',\n    end_date: '',\n    status: '',\n    budget: 0\n  };\n\n ngOnInit(): void {\n    this.campaignForm = this.fb.group({\n      name: ['', Validators.required],\n      description: ['', Validators.required],\n      start_date: ['', Validators.required],\n      end_date: ['', Validators.required],\n      status: ['', Validators.required],\n      budget: [0, [Validators.required, Validators.min(1)]]\n    });\n  }\nonSubmit(): void {\n    if (this.campaignForm.valid) {\n      console.log(this.campaignForm.value);\n      this.campaignService.registerCampaign(this.campaignForm.value).subscribe({\n        next: (res) => {\n          console.log(res);\n           this.toasterService.success('Login Successfuly',\"Success\");\n  this.router.navigate([\"/dashboard\"]);\n          this.campaignForm.reset();\n       \n        },\n        error: err => {\n          console.error('Error:', err);\n           this.toasterService.error('Invalid Credentials',\"Failed\");\n               this.campaignForm.reset();\n        }\n      });\n    }\n  }\n}", "import { ComponentFixture, TestBed } from '@angular/core/testing';\n\nimport { CampaignRegister } from './campaign-register';\n\ndescribe('CampaignRegister', () => {\n  let component: CampaignRegister;\n  let fixture: ComponentFixture<CampaignRegister>;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      imports: [CampaignRegister]\n    })\n    .compileComponents();\n\n    fixture = TestBed.createComponent(CampaignRegister);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n});\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,IAAAA;AAAA,IAAAC,0BAAA;AAAA;AAAA,IAAAD,6BAAA;AAAA;AAAA;;;ICea;;;;;;;AAdb;AACA;AACA;AACA;AACA;AAEA;AACA;AAOO,IAAM,mBAAN,MAAME,kBAAgB;MAGP;MAAsB;MAAwB;MAAsC;MAFxG;MAEA,YAAoB,QAAsB,IAAwB,gBAAsC,iBAAgC;AAApH,aAAA,SAAA;AAAsB,aAAA,KAAA;AAAwB,aAAA,iBAAA;AAAsC,aAAA,kBAAA;MAAmC;MAE7I,WAA0B;QACtB,MAAM;QACN,aAAa;QACb,YAAY;QACZ,UAAU;QACV,QAAQ;QACR,QAAQ;;MAGX,WAAQ;AACL,aAAK,eAAe,KAAK,GAAG,MAAM;UAChC,MAAM,CAAC,IAAI,WAAW,QAAQ;UAC9B,aAAa,CAAC,IAAI,WAAW,QAAQ;UACrC,YAAY,CAAC,IAAI,WAAW,QAAQ;UACpC,UAAU,CAAC,IAAI,WAAW,QAAQ;UAClC,QAAQ,CAAC,IAAI,WAAW,QAAQ;UAChC,QAAQ,CAAC,GAAG,CAAC,WAAW,UAAU,WAAW,IAAI,CAAC,CAAC,CAAC;SACrD;MACH;MACF,WAAQ;AACJ,YAAI,KAAK,aAAa,OAAO;AAC3B,kBAAQ,IAAI,KAAK,aAAa,KAAK;AACnC,eAAK,gBAAgB,iBAAiB,KAAK,aAAa,KAAK,EAAE,UAAU;YACvE,MAAM,CAAC,QAAO;AACZ,sBAAQ,IAAI,GAAG;AACd,mBAAK,eAAe,QAAQ,qBAAoB,SAAS;AAClE,mBAAK,OAAO,SAAS,CAAC,YAAY,CAAC;AAC3B,mBAAK,aAAa,MAAK;YAEzB;YACA,OAAO,SAAM;AACX,sBAAQ,MAAM,UAAU,GAAG;AAC1B,mBAAK,eAAe,MAAM,uBAAsB,QAAQ;AACpD,mBAAK,aAAa,MAAK;YAC9B;WACD;QACH;MACF;;;;;;;;AA1CW,uBAAgB,WAAA;MAN5B,UAAU;QACT,UAAU;QACV,SAAS,CAAC,cAAa,mBAAmB;QAC1C,UAAA;;OAED;OACY,gBAAgB;;;;;ACf7B;;;AAEA,IAAAC;AAEA,aAAS,oBAAoB,MAAK;AAChC,UAAI;AACJ,UAAI;AAEJ,iBAAW,MAAW;AACpB,cAAM,QAAQ,uBAAuB;UACnC,SAAS,CAAC,gBAAgB;SAC3B,EACA,kBAAiB;AAElB,kBAAU,QAAQ,gBAAgB,gBAAgB;AAClD,oBAAY,QAAQ;AACpB,gBAAQ,cAAa;MACvB,EAAC;AAED,SAAG,iBAAiB,MAAK;AACvB,eAAO,SAAS,EAAE,WAAU;MAC9B,CAAC;IACH,CAAC;;;",
  "names": ["campaign_register_default", "init_campaign_register", "CampaignRegister", "init_campaign_register"]
}
