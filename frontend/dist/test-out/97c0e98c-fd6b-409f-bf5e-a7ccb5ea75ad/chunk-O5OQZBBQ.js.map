{
  "version": 3,
  "sources": ["angular:jit:template:src/app/login/login.html", "angular:jit:style:src/app/login/login.css", "src/app/login/login.ts"],
  "sourcesContent": ["<!-- \n<div class=\"modal-backdrop show\">\n  <div class=\"modal d-block\" tabindex=\"-1\">\n    <div class=\"modal-dialog modal-dialog-centered\">\n      <div class=\"modal-content custom-login-modal text-center p-4\">\n        <h5 class=\"modal-title text-black mb-3\">Login</h5>\n        <form (ngSubmit)=\"onSubmit()\" #loginForm=\"ngForm\">\n          <input\n            type=\"email\"\n            class=\"form-control mb-3 dark-input\"\n            placeholder=\"Enter Email\"\n            name=\"email\"\n            [(ngModel)]=\"loginData.email\"\n            required\n          />\n          <input\n            type=\"password\"\n            class=\"form-control mb-3 dark-input\"\n            placeholder=\"Enter Password\"\n            name=\"password\"\n            [(ngModel)]=\"loginData.password\"\n            required\n          />\n          <button\n            type=\"submit\"\n            class=\"btn btn-primary fw-bold\"\n            [disabled]=\"!loginForm.form.valid\"\n          >\n            Login\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-danger ms-2 fw-bold\"\n            (click)=\"handleClose()\"\n          >\n            Close\n          </button>\n        </form>\n      </div>\n    </div>\n  </div>\n</div> -->\n\n\n\n\n<div class=\"modal-backdrop show\">\n  <div class=\"modal d-block\" tabindex=\"-1\">\n    <div class=\"modal-dialog modal-dialog-centered\">\n      <div class=\"modal-content custom-login-modal text-center p-4 bg-white\">\n        <h5 class=\"modal-title text-black mb-3\">Login</h5>\n        <form (ngSubmit)=\"onSubmit()\" #loginForm=\"ngForm\">\n          <!-- Email -->\n          <input\n            type=\"email\"\n            name=\"email\"\n            [(ngModel)]=\"loginData.email\"\n            required\n            pattern=\"^[a-zA-Z0-9._%+-]+@consultadd\\.com$\"\n            #emailRef=\"ngModel\"\n            class=\"form-control mb-1\"\n            placeholder=\"Enter your Consultadd email\"\n          />\n          <small class=\"text-danger\" *ngIf=\"emailRef.invalid && emailRef.touched\">\n            Valid Consultadd email is required \n          </small>\n\n          <!-- Password -->\n          <input\n            type=\"password\"\n            name=\"password\"\n            [(ngModel)]=\"loginData.password\"\n            required\n            minlength=\"8\"\n            #passwordRef=\"ngModel\"\n            class=\"form-control mb-1 mt-3\"\n            placeholder=\"Enter password (min 8 chars)\"\n          />\n          <small class=\"text-danger\" *ngIf=\"passwordRef.invalid && passwordRef.touched\">\n            Password must be at least 8 characters\n          </small>\n\n          <!-- Buttons -->\n          <div class=\"mt-4\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary fw-bold\"\n              [disabled]=\"!loginForm.valid\"\n            >\n              Login\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-danger ms-2 fw-bold\"\n              (click)=\"handleClose()\"\n            >\n              Close\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n", "/* src/app/login/login.css */\n.modal-backdrop.show {\n  background-color: rgba(0, 0, 0, 0.85);\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  z-index: 1040;\n}\n.modal-content.custom-login-modal {\n  background-color: #ffffff;\n  color: #000000;\n  border-radius: 16px;\n  box-shadow: 0 4px 20px rgba(255, 255, 255, 0.2);\n  max-width: 400px;\n  margin: auto;\n  padding: 30px 25px;\n  border: none;\n}\n.dark-input {\n  background-color: #f9f9f9;\n  border: 1px solid #ccc;\n  color: #333;\n}\n.dark-input::placeholder {\n  color: #999;\n}\n/*# sourceMappingURL=login.css.map */\n", "import { CommonModule } from '@angular/common';\nimport { HttpClient } from '@angular/common/http';\nimport { Component, EventEmitter, Output } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  imports:[FormsModule,CommonModule],\n  templateUrl: './login.html',\n  styleUrls: ['./login.css']\n})\nexport class LoginComponent {\n  // @Output() close = new EventEmitter<void>();\n\n  // handleClose() {\n  //   this.close.emit();\n  // }\n  // above code is of earlier \n  // @Output() close = new EventEmitter<void>();\n\n  loginData = {\n    email: '',\n    password: '',\n  };\n\n  constructor(private http: HttpClient, private router: Router) {}\nonSubmit() {\n  this.http.post<any>('http://localhost:8080/consultadd/auth/login', this.loginData).subscribe({\n    next: (res) => {\n      console.log('Login success', res);\n\n      // Save data to local storage\n      localStorage.setItem('token', res.token);\n      localStorage.setItem('role', res.role);\n      localStorage.setItem('employeeId', res.employeeId);\n\n      alert('Login successful');\n\n      // Role-based navigation\n      if (res.role === 'SELLER') {\n        this.router.navigate(['/seller-dashboard']);\n      } else if (res.role === 'BUYER') {\n        this.router.navigate(['/buyer-dashboard']);\n      } else if (res.role === 'ADMIN') {\n        this.router.navigate(['/admin-dashboard']);\n      } else {\n        alert('Unknown role');\n        this.router.navigate(['/']);\n      }\n\n      // ❌ Remove this line\n      // this.handleClose(); \n    },\n    error: (err) => {\n      console.error('Login failed', err);\n      alert('Login failed. Please check your credentials.');\n    },\n  });\n}\n\n  handleClose() {\n   this.router.navigate(['/']); \n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,IAAAA;AAAA,IAAAC,cAAA;AAAA;AAAA,IAAAD,iBAAA;AAAA;AAAA;;;ICYa;;;;;;;AAZb;AACA;AACA;AACA;AACA;AAQO,IAAM,iBAAN,MAAME,gBAAc;MAcL;MAA0B;;;;;;;MAL9C,YAAY;QACV,OAAO;QACP,UAAU;;MAGZ,YAAoB,MAA0B,QAAc;AAAxC,aAAA,OAAA;AAA0B,aAAA,SAAA;MAAiB;MACjE,WAAQ;AACN,aAAK,KAAK,KAAU,+CAA+C,KAAK,SAAS,EAAE,UAAU;UAC3F,MAAM,CAAC,QAAO;AACZ,oBAAQ,IAAI,iBAAiB,GAAG;AAGhC,yBAAa,QAAQ,SAAS,IAAI,KAAK;AACvC,yBAAa,QAAQ,QAAQ,IAAI,IAAI;AACrC,yBAAa,QAAQ,cAAc,IAAI,UAAU;AAEjD,kBAAM,kBAAkB;AAGxB,gBAAI,IAAI,SAAS,UAAU;AACzB,mBAAK,OAAO,SAAS,CAAC,mBAAmB,CAAC;YAC5C,WAAW,IAAI,SAAS,SAAS;AAC/B,mBAAK,OAAO,SAAS,CAAC,kBAAkB,CAAC;YAC3C,WAAW,IAAI,SAAS,SAAS;AAC/B,mBAAK,OAAO,SAAS,CAAC,kBAAkB,CAAC;YAC3C,OAAO;AACL,oBAAM,cAAc;AACpB,mBAAK,OAAO,SAAS,CAAC,GAAG,CAAC;YAC5B;UAIF;UACA,OAAO,CAAC,QAAO;AACb,oBAAQ,MAAM,gBAAgB,GAAG;AACjC,kBAAM,8CAA8C;UACtD;SACD;MACH;MAEE,cAAW;AACV,aAAK,OAAO,SAAS,CAAC,GAAG,CAAC;MAC3B;;;;;;AAnDW,qBAAc,WAAA;MAN1B,UAAU;QACT,UAAU;QACV,SAAQ,CAAC,aAAY,YAAY;QACjC,UAAA;;OAED;OACY,cAAc;;;",
  "names": ["login_default", "init_login", "LoginComponent"]
}
