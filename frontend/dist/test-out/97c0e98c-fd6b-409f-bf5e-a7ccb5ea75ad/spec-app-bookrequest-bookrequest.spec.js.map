{
  "version": 3,
  "sources": ["angular:jit:template:src/app/bookrequest/bookrequest.html", "angular:jit:style:src/app/bookrequest/bookrequest.css", "src/app/bookrequest/bookrequest.ts", "src/app/bookrequest/bookrequest.spec.ts"],
  "sourcesContent": ["\n\n\n<div class=\"modal-background d-flex justify-content-center align-items-center\">\n  <div class=\"form-modal pop-out\">\n    <h2 class=\"text-center mb-4\">\uD83D\uDCDA Create Book Request</h2>\n    <form (ngSubmit)=\"submitRequest()\" #form=\"ngForm\">\n      <div class=\"mb-3\">\n        <label class=\"form-label\">Title:</label>\n        <input\n          class=\"form-control\"\n          name=\"title\"\n          [(ngModel)]=\"bookRequest.title\"\n          required\n        />\n      </div>\n\n      <div class=\"mb-3\">\n        <label class=\"form-label\">Author:</label>\n        <input\n          class=\"form-control\"\n          name=\"author\"\n          [(ngModel)]=\"bookRequest.author\"\n          required\n        />\n      </div>\n\n      <div class=\"mb-3\">\n        <label class=\"form-label\">Reason:</label>\n        <textarea\n          class=\"form-control\"\n          name=\"reason\"\n          [(ngModel)]=\"bookRequest.reason\"\n          required\n        ></textarea>\n      </div>\n\n      <input\n        type=\"hidden\"\n        name=\"requesterId\"\n        [(ngModel)]=\"bookRequest.requesterId\"\n        required\n      />\n\n      <div class=\"button-container  text-center mt-4\">\n        <button class=\"btn btn-success px-4\" type=\"submit\">Submit</button>\n         <button class=\"btn btn-danger px-4\" (click)=\"movetobuyerdashboard()\">Close</button>\n      </div>\n    </form>\n  </div>\n</div>\n\n\n", "/* src/app/bookrequest/bookrequest.css */\n.modal-background {\n  background-color: #000;\n  min-height: 100vh;\n  padding: 20px;\n}\n.form-modal {\n  background-color: #fff;\n  max-width: 500px;\n  width: 100%;\n}\n.modal-background {\n  background-color: #000;\n  min-height: 100vh;\n  padding: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.form-modal {\n  background-color: #ffffff;\n  border-radius: 20px;\n  padding: 30px;\n  width: 100%;\n  max-width: 500px;\n  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.5);\n  border: 1px solid #e0e0e0;\n  animation: popIn 0.4s ease-out;\n  transform: scale(1);\n  transition: transform 0.2s;\n}\n.form-modal:hover {\n  transform: scale(1.02);\n}\n@keyframes popIn {\n  0% {\n    opacity: 0;\n    transform: scale(0.8);\n  }\n  100% {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n.buttons {\n  display: flex;\n}\n.button-container {\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n  gap: 20px;\n}\n/*# sourceMappingURL=bookrequest.css.map */\n", "\n\n\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-bookrequest',\n  imports: [FormsModule,CommonModule],\n  templateUrl: './bookrequest.html',\n  styleUrl: './bookrequest.css'\n})\nexport class BookRequest implements OnInit{\n  role=localStorage.getItem('role');\n  bookRequest = {\n    title: '',\n    author: '',\n    reason: '',\n    requesterId: '',\n  };\n\n  constructor(private http: HttpClient, private router: Router) {}\n  \n  ngOnInit(): void {\n    const id = localStorage.getItem('employeeId');\n    if (id) {\n      this.bookRequest.requesterId = id;\n    }\n  }\n\nmovetobuyerdashboard(){\nif (this.role === 'SELLER') {\n        this.router.navigate(['/seller-dashboard']);\n      } else if (this.role === 'BUYER') {\n        this.router.navigate(['/buyer-dashboard']);\n      } \n      else if (this.role=='ADMIN'){\n        this.router.navigate(['/admin-dashboard']);\n      }else {\n        alert('Unknown role');\n      }  \n}\n\n  submitRequest() {\n    const token = localStorage.getItem('token'); // or sessionStorage if you're storing it there\n    const id=localStorage.getItem('employeeId');\n    console.log(\"Requester Id\",id);\n   \n    if (!token) {\n      alert('Token not found. Please login.');\n      return;\n    }\n\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n\n    this.http\n      .post('http://localhost:8080/api/book-requests/create-bookrequest', this.bookRequest, { headers })\n.subscribe({\n      next: () => {\n        alert('✅ Book request submitted successfully!');\n         if (this.role === 'SELLER') {\n          this.router.navigate(['/seller-dashboard']);\n        } else if (this.role === 'BUYER') {\n          this.router.navigate(['/buyer-dashboard']);\n        } else if (this.role === 'ADMIN') {\n          this.router.navigate(['/admin-dashboard']);\n        } else {\n          alert('Unknown role');\n        } // 🔁 replace with your actual route\n      },\n      error: (err) => {\n        console.error(err);\n        alert('❌ Failed to submit book request.');\n      },\n    });\n  }\n}\n", "import { ComponentFixture, TestBed } from '@angular/core/testing';\n\nimport { BookRequest } from './bookrequest';\n\ndescribe('Bookrequest', () => {\n  let component: BookRequest;\n  let fixture: ComponentFixture<BookRequest>;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      imports: [BookRequest]\n    })\n    .compileComponents();\n\n    fixture = TestBed.createComponent(BookRequest);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n});\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,IAAAA;AAAA,IAAAC,oBAAA;AAAA;AAAA,IAAAD,uBAAA;AAAA;AAAA;;;ICgBa;;;;;;;AAZb;AACA;AACA;AACA;AACA;AAQO,IAAM,cAAN,MAAME,aAAW;MASF;MAA0B;MAR9C,OAAK,aAAa,QAAQ,MAAM;MAChC,cAAc;QACZ,OAAO;QACP,QAAQ;QACR,QAAQ;QACR,aAAa;;MAGf,YAAoB,MAA0B,QAAc;AAAxC,aAAA,OAAA;AAA0B,aAAA,SAAA;MAAiB;MAE/D,WAAQ;AACN,cAAM,KAAK,aAAa,QAAQ,YAAY;AAC5C,YAAI,IAAI;AACN,eAAK,YAAY,cAAc;QACjC;MACF;MAEF,uBAAoB;AACpB,YAAI,KAAK,SAAS,UAAU;AACpB,eAAK,OAAO,SAAS,CAAC,mBAAmB,CAAC;QAC5C,WAAW,KAAK,SAAS,SAAS;AAChC,eAAK,OAAO,SAAS,CAAC,kBAAkB,CAAC;QAC3C,WACS,KAAK,QAAM,SAAQ;AAC1B,eAAK,OAAO,SAAS,CAAC,kBAAkB,CAAC;QAC3C,OAAM;AACJ,gBAAM,cAAc;QACtB;MACN;MAEE,gBAAa;AACX,cAAM,QAAQ,aAAa,QAAQ,OAAO;AAC1C,cAAM,KAAG,aAAa,QAAQ,YAAY;AAC1C,gBAAQ,IAAI,gBAAe,EAAE;AAE7B,YAAI,CAAC,OAAO;AACV,gBAAM,gCAAgC;AACtC;QACF;AAEA,cAAM,UAAU,IAAI,YAAW,EAAG,IAAI,iBAAiB,UAAU,KAAK,EAAE;AAExE,aAAK,KACF,KAAK,8DAA8D,KAAK,aAAa,EAAE,QAAO,CAAE,EACtG,UAAU;UACL,MAAM,MAAK;AACT,kBAAM,6CAAwC;AAC7C,gBAAI,KAAK,SAAS,UAAU;AAC3B,mBAAK,OAAO,SAAS,CAAC,mBAAmB,CAAC;YAC5C,WAAW,KAAK,SAAS,SAAS;AAChC,mBAAK,OAAO,SAAS,CAAC,kBAAkB,CAAC;YAC3C,WAAW,KAAK,SAAS,SAAS;AAChC,mBAAK,OAAO,SAAS,CAAC,kBAAkB,CAAC;YAC3C,OAAO;AACL,oBAAM,cAAc;YACtB;UACF;UACA,OAAO,CAAC,QAAO;AACb,oBAAQ,MAAM,GAAG;AACjB,kBAAM,uCAAkC;UAC1C;SACD;MACH;;;;;;AA/DW,kBAAW,WAAA;MANvB,UAAU;QACT,UAAU;QACV,SAAS,CAAC,aAAY,YAAY;QAClC,UAAA;;OAED;OACY,WAAW;;;;;AChBxB;;;AAEA,IAAAC;AAEA,aAAS,eAAe,MAAK;AAC3B,UAAI;AACJ,UAAI;AAEJ,iBAAW,MAAW;AACpB,cAAM,QAAQ,uBAAuB;UACnC,SAAS,CAAC,WAAW;SACtB,EACA,kBAAiB;AAElB,kBAAU,QAAQ,gBAAgB,WAAW;AAC7C,oBAAY,QAAQ;AACpB,gBAAQ,cAAa;MACvB,EAAC;AAED,SAAG,iBAAiB,MAAK;AACvB,eAAO,SAAS,EAAE,WAAU;MAC9B,CAAC;IACH,CAAC;;;",
  "names": ["bookrequest_default", "init_bookrequest", "BookRequest", "init_bookrequest"]
}
