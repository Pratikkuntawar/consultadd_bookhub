{
  "version": 3,
  "sources": ["angular:jit:template:src/app/updatebook/updatebook.html", "angular:jit:style:src/app/updatebook/updatebook.css", "src/app/updatebook/updatebook.ts", "src/app/updatebook/updatebook.spec.ts"],
  "sourcesContent": ["<div class=\"form-container\">\n  <form [formGroup]=\"updateForm\" (ngSubmit)=\"onSubmit()\">\n    <h2>Update Book</h2>\n\n    <label>Book ID:</label>\n    <input formControlName=\"id\" type=\"number\" placeholder=\"Enter Book ID\" />\n\n    <label>Title:</label>\n    <input formControlName=\"title\" type=\"text\" />\n\n    <label>Author:</label>\n    <input formControlName=\"author\" type=\"text\" />\n\n    <label>Description:</label>\n    <textarea formControlName=\"description\"></textarea>\n\n    <label>Book Type:</label>\n    <select formControlName=\"bookType\">\n      <option value=\"PHYSICAL\">PHYSICAL</option>\n      <option value=\"DIGITAL\">DIGITAL</option>\n    </select>\n\n\n      <!-- <div class=\"form-group\"> -->\n        <label>Department</label>\n        <select formControlName=\"department\" required>\n          <option value=\"\">Select Department</option>\n          <option value=\"CODING\">CODING</option>\n          <option value=\"HR\">HR</option>\n          <option value=\"SALES\">SALES</option>\n          <option value=\"DELIVERY\">DELIVERY</option>\n          <option value=\"MARKETING\">MARKETING</option>\n        </select>\n      <!-- </div> -->\n\n    <label>PDF URL:</label>\n    <input formControlName=\"pdfUrl\" type=\"text\" />\n\n    <label>Image URL:</label>\n    <input formControlName=\"imageUrl\" type=\"text\" />\n\n        <label>Price:</label>\n    <input formControlName=\"price\" type=\"number\" />\n    \n    <button type=\"submit\">Update Book</button>\n  </form>\n</div>\n\n", "/* src/app/updatebook/updatebook.css */\n.form-container {\n  width: 500px;\n  margin: 60px auto;\n  background-color: #ffffff;\n  padding: 30px;\n  border-radius: 12px;\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.2);\n}\nform label {\n  display: block;\n  margin: 10px 0 5px;\n  font-weight: bold;\n}\nform input,\nform textarea,\nform select {\n  width: 100%;\n  padding: 8px;\n  margin-bottom: 15px;\n  border: 1px solid #ccc;\n  border-radius: 6px;\n}\nbutton {\n  width: 100%;\n  padding: 10px;\n  background-color: #0b5ed7;\n  color: white;\n  font-weight: bold;\n  border: none;\n  border-radius: 6px;\n  cursor: pointer;\n}\nbutton:hover {\n  background-color: #084298;\n}\n/*# sourceMappingURL=updatebook.css.map */\n", "import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-updatebook',\n  imports: [FormsModule,ReactiveFormsModule],\n  templateUrl: './updatebook.html',\n  styleUrl: './updatebook.css'\n})\nexport class Updatebook {\nupdateForm: FormGroup;\n\n  constructor(private fb: FormBuilder, private http: HttpClient) {\n    this.updateForm = this.fb.group({\n      id: ['', Validators.required],\n      title: ['', Validators.required],\n      author: ['', Validators.required],\n      description: ['', Validators.required],\n      bookType: ['', Validators.required],\n      department: ['', Validators.required],\n      pdfUrl: ['', Validators.required],\n      price: ['', Validators.required],\n      imageUrl: ['', Validators.required]\n    });\n  }\n\nonSubmit() {\n  const bookId = this.updateForm.value.id;\n  const body = { ...this.updateForm.value };\n  delete body.id;\n\n  const token = localStorage.getItem('token');// Replace this with actual token from storage or auth service\n\n  this.http.put(`http://localhost:8080/consultadd/books/updatebook/${bookId}`, body, {\n    headers: {\n      'Authorization': `Bearer ${token}`,\n      'Content-Type': 'application/json'\n    }\n  }).subscribe({\n    next: (res) => {\n      alert('✅ Book updated successfully');\n    },\n    error: (err) => {\n      if (err.status === 403) {\n        alert('❌ Book not found with this ID');\n      } else if (err.status === 404) {\n        alert('🚫 Forbidden: You are not authorized to update this book');\n      } else {\n        alert('⚠️ Error updating book. Please try again.');\n        console.error('Error:', err);\n      }\n    }\n  });\n}\n\n}\n", "import { ComponentFixture, TestBed } from '@angular/core/testing';\n\nimport { Updatebook } from './updatebook';\n\ndescribe('Updatebook', () => {\n  let component: Updatebook;\n  let fixture: ComponentFixture<Updatebook>;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      imports: [Updatebook]\n    })\n    .compileComponents();\n\n    fixture = TestBed.createComponent(Updatebook);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n});\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,IAAAA;AAAA,IAAAC,mBAAA;AAAA;AAAA,IAAAD,sBAAA;AAAA;AAAA;;;ICUa;;;;;;;AAVb;AACA;AACA;AAQO,IAAM,aAAN,MAAME,YAAU;MAGD;MAAyB;MAF/C;MAEE,YAAoB,IAAyB,MAAgB;AAAzC,aAAA,KAAA;AAAyB,aAAA,OAAA;AAC3C,aAAK,aAAa,KAAK,GAAG,MAAM;UAC9B,IAAI,CAAC,IAAI,WAAW,QAAQ;UAC5B,OAAO,CAAC,IAAI,WAAW,QAAQ;UAC/B,QAAQ,CAAC,IAAI,WAAW,QAAQ;UAChC,aAAa,CAAC,IAAI,WAAW,QAAQ;UACrC,UAAU,CAAC,IAAI,WAAW,QAAQ;UAClC,YAAY,CAAC,IAAI,WAAW,QAAQ;UACpC,QAAQ,CAAC,IAAI,WAAW,QAAQ;UAChC,OAAO,CAAC,IAAI,WAAW,QAAQ;UAC/B,UAAU,CAAC,IAAI,WAAW,QAAQ;SACnC;MACH;MAEF,WAAQ;AACN,cAAM,SAAS,KAAK,WAAW,MAAM;AACrC,cAAM,OAAO,mBAAK,KAAK,WAAW;AAClC,eAAO,KAAK;AAEZ,cAAM,QAAQ,aAAa,QAAQ,OAAO;AAE1C,aAAK,KAAK,IAAI,qDAAqD,MAAM,IAAI,MAAM;UACjF,SAAS;YACP,iBAAiB,UAAU,KAAK;YAChC,gBAAgB;;SAEnB,EAAE,UAAU;UACX,MAAM,CAAC,QAAO;AACZ,kBAAM,kCAA6B;UACrC;UACA,OAAO,CAAC,QAAO;AACb,gBAAI,IAAI,WAAW,KAAK;AACtB,oBAAM,oCAA+B;YACvC,WAAW,IAAI,WAAW,KAAK;AAC7B,oBAAM,iEAA0D;YAClE,OAAO;AACL,oBAAM,qDAA2C;AACjD,sBAAQ,MAAM,UAAU,GAAG;YAC7B;UACF;SACD;MACH;;;;;;AA5Ca,iBAAU,WAAA;MANtB,UAAU;QACT,UAAU;QACV,SAAS,CAAC,aAAY,mBAAmB;QACzC,UAAA;;OAED;OACY,UAAU;;;;;ACVvB;;;AAEA,IAAAC;AAEA,aAAS,cAAc,MAAK;AAC1B,UAAI;AACJ,UAAI;AAEJ,iBAAW,MAAW;AACpB,cAAM,QAAQ,uBAAuB;UACnC,SAAS,CAAC,UAAU;SACrB,EACA,kBAAiB;AAElB,kBAAU,QAAQ,gBAAgB,UAAU;AAC5C,oBAAY,QAAQ;AACpB,gBAAQ,cAAa;MACvB,EAAC;AAED,SAAG,iBAAiB,MAAK;AACvB,eAAO,SAAS,EAAE,WAAU;MAC9B,CAAC;IACH,CAAC;;;",
  "names": ["updatebook_default", "init_updatebook", "Updatebook", "init_updatebook"]
}
