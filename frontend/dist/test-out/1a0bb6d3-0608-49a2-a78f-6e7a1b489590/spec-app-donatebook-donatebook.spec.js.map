{
  "version": 3,
  "sources": ["angular:jit:template:src/app/donatebook/donatebook.html", "angular:jit:style:src/app/donatebook/donatebook.css", "src/app/donatebook/donatebook.ts", "src/app/donatebook/donatebook.spec.ts"],
  "sourcesContent": ["<div class=\"modal-background d-flex justify-content-center align-items-center\">\n  <div class=\"form-modal pop-out\">\n    <h2 class=\"text-center mb-4\">\uD83D\uDCD8 Donate a Book</h2>\n    <form (ngSubmit)=\"submitDonation()\" #form=\"ngForm\">\n      <div class=\"mb-3\">\n        <label class=\"form-label\">Title:</label>\n        <input\n          class=\"form-control\"\n          name=\"title\"\n          [(ngModel)]=\"book.title\"\n          required\n        />\n      </div>\n\n      <div class=\"mb-3\">\n        <label class=\"form-label\">Author:</label>\n        <input\n          class=\"form-control\"\n          name=\"author\"\n          [(ngModel)]=\"book.author\"\n          required\n        />\n      </div>\n\n      <div class=\"mb-3\">\n        <label class=\"form-label\">PDF URL:</label>\n        <input\n          type=\"url\"\n          class=\"form-control\"\n          name=\"pdfUrl\"\n          [(ngModel)]=\"book.pdfUrl\"\n          required\n        />\n      </div>\n\n      <div class=\"mb-3\">\n        <label class=\"form-label\">Image URL:</label>\n        <input\n          type=\"url\"\n          class=\"form-control\"\n          name=\"imageUrl\"\n          [(ngModel)]=\"book.imageUrl\"\n          required\n        />\n      </div>\n\n      <div class=\"mb-3\">\n        <label class=\"form-label\">Department:</label>\n        <select\n          class=\"form-select\"\n          name=\"department\"\n          [(ngModel)]=\"book.department\"\n          required\n        >\n          <option value=\"\" disabled selected>Select department</option>\n          <option value=\"CODING\">CODING</option>\n          <option value=\"MARKETING\">MARKETING</option>\n          <option value=\"SALES\">MECHANICAL</option>\n          <option value=\"HR\">HR</option>\n          <option value=\"DELIVERY\">DELIVERY</option>\n        </select>\n      </div>\n\n      <!-- Donor ID hidden -->\n      <input\n        type=\"hidden\"\n        name=\"donorId\"\n        [(ngModel)]=\"book.donor.id\"\n        required\n      />\n\n      <div class=\"button-container\">\n        <button class=\"btn btn-success px-4\" type=\"submit\">Submit</button>\n        <button class=\"btn btn-danger px-4\" (click)=\"movetobuyerdashboard()\" type=\"button\">Close</button>\n      </div>\n    </form>\n  </div>\n</div>\n\n", "/* src/app/donatebook/donatebook.css */\n.modal-background {\n  background-color: #000;\n  min-height: 100vh;\n  padding: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.form-modal {\n  background-color: #ffffff;\n  border-radius: 20px;\n  padding: 30px;\n  width: 100%;\n  max-width: 500px;\n  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.5);\n  border: 1px solid #e0e0e0;\n  animation: popIn 0.4s ease-out;\n}\n@keyframes popIn {\n  0% {\n    opacity: 0;\n    transform: scale(0.8);\n  }\n  100% {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n.button-container {\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n  margin-top: 20px;\n}\n/*# sourceMappingURL=donatebook.css.map */\n", "\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport Swal from 'sweetalert2';\n@Component({\n  selector: 'app-donatebook',\n  imports: [FormsModule,CommonModule],\n  templateUrl: './donatebook.html',\n  styleUrl: './donatebook.css'\n})\nexport class DonateBook implements OnInit {\n  role=localStorage.getItem('role');\n  book = {\n    title: '',\n    author: '',\n    pdfUrl: '',\n    imageUrl: '',\n    department: '',\n    donor: {\n      id: 0,\n    },\n  };\n\n  constructor(private http: HttpClient, private router: Router) {}\n  \n  ngOnInit(): void {\n    const id=localStorage.getItem('employeeId');\n    if (id) {\n      this.book.donor.id = +id;\n    }\n  }\n\n// submitDonation() {\n//   const token = localStorage.getItem('token');\n//   // const role = localStorage.getItem('role'); // assuming role is stored in localStorage\n\n//   if (!token) {\n//     alert('Please login first.');\n//     return;\n//   }\n\n//   const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n\n//   this.http\n//     .post('http://localhost:8080/api/donations/donor/donate-book', this.book, { headers })\n//     .subscribe({\n//       next: () => {\n//         alert('✅ Book donation submitted successfully!');\n        \n//         // Redirect based on role\n//         if (this.role === 'SELLER') {\n//           this.router.navigate(['/seller-dashboard']);\n//         } else if (this.role === 'BUYER') {\n//           this.router.navigate(['/buyer-dashboard']);\n//         } else if (this.role === 'ADMIN') {\n//           this.router.navigate(['/admin-dashboard']);\n//         } else {\n//           alert('Unknown role');\n//         }\n//       },\n//       error: (err) => {\n//         console.error(err);\n//         alert('❌ Failed to donate book.');\n//       },\n//     });\n// }\n\nsubmitDonation() {\n  const token = localStorage.getItem('token');\n\n  if (!token) {\n    Swal.fire({\n      icon: 'warning',\n      title: 'Not Logged In',\n      text: 'Please login first.',\n    });\n    return;\n  }\n\n  const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n\n  this.http\n    .post('http://localhost:8080/api/donations/donor/donate-book', this.book, { headers })\n    .subscribe({\n      next: () => {\n        Swal.fire({\n          icon: 'success',\n          title: 'Success!',\n          text: '✅ Book donation submitted successfully!',\n        }).then((result) => {\n          if (result.isConfirmed) {\n            // Redirect based on role\n            if (this.role === 'SELLER') {\n              this.router.navigate(['/seller-dashboard']);\n            } else if (this.role === 'BUYER') {\n              this.router.navigate(['/buyer-dashboard']);\n            } else if (this.role === 'ADMIN') {\n              this.router.navigate(['/admin-dashboard']);\n            } else {\n              Swal.fire({\n                icon: 'info',\n                title: 'Unknown Role',\n                text: 'Redirect failed: role not recognized.',\n              });\n            }\n          }\n        });\n      },\n      error: (err) => {\n        console.error(err);\n        Swal.fire({\n          icon: 'error',\n          title: 'Donation Failed',\n          text: '❌ Failed to donate book. Please try again.',\n        });\n      },\n    });\n}\n\n\n  movetobuyerdashboard() {\n      if (this.role === 'SELLER') {\n        this.router.navigate(['/seller-dashboard']);\n      } else if (this.role === 'BUYER') {\n        this.router.navigate(['/buyer-dashboard']);\n      } \n      else if (this.role=='ADMIN'){\n        this.router.navigate(['/admin-dashboard']);\n      }else {\n        alert('Unknown role');\n      }\n  }\n}\n", "import { ComponentFixture, TestBed } from '@angular/core/testing';\n\nimport { DonateBook } from './donatebook';\n\ndescribe('Donatebook', () => {\n  let component: DonateBook;\n  let fixture: ComponentFixture<DonateBook>;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      imports: [DonateBook]\n    })\n    .compileComponents();\n\n    fixture = TestBed.createComponent(DonateBook);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n});\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,IAAAA;AAAA,IAAAC,mBAAA;AAAA;AAAA,IAAAD,sBAAA;AAAA;AAAA;;;ICMA,oBAOa;;;;;;;AAZb;AACA;AACA;AACA;AACA;AACA,yBAAiB;AAOV,IAAM,aAAN,MAAME,YAAU;MAaD;MAA0B;MAZ9C,OAAK,aAAa,QAAQ,MAAM;MAChC,OAAO;QACL,OAAO;QACP,QAAQ;QACR,QAAQ;QACR,UAAU;QACV,YAAY;QACZ,OAAO;UACL,IAAI;;;MAIR,YAAoB,MAA0B,QAAc;AAAxC,aAAA,OAAA;AAA0B,aAAA,SAAA;MAAiB;MAE/D,WAAQ;AACN,cAAM,KAAG,aAAa,QAAQ,YAAY;AAC1C,YAAI,IAAI;AACN,eAAK,KAAK,MAAM,KAAK,CAAC;QACxB;MACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAqCF,iBAAc;AACZ,cAAM,QAAQ,aAAa,QAAQ,OAAO;AAE1C,YAAI,CAAC,OAAO;AACV,6BAAAC,QAAK,KAAK;YACR,MAAM;YACN,OAAO;YACP,MAAM;WACP;AACD;QACF;AAEA,cAAM,UAAU,IAAI,YAAW,EAAG,IAAI,iBAAiB,UAAU,KAAK,EAAE;AAExE,aAAK,KACF,KAAK,yDAAyD,KAAK,MAAM,EAAE,QAAO,CAAE,EACpF,UAAU;UACT,MAAM,MAAK;AACT,+BAAAA,QAAK,KAAK;cACR,MAAM;cACN,OAAO;cACP,MAAM;aACP,EAAE,KAAK,CAAC,WAAU;AACjB,kBAAI,OAAO,aAAa;AAEtB,oBAAI,KAAK,SAAS,UAAU;AAC1B,uBAAK,OAAO,SAAS,CAAC,mBAAmB,CAAC;gBAC5C,WAAW,KAAK,SAAS,SAAS;AAChC,uBAAK,OAAO,SAAS,CAAC,kBAAkB,CAAC;gBAC3C,WAAW,KAAK,SAAS,SAAS;AAChC,uBAAK,OAAO,SAAS,CAAC,kBAAkB,CAAC;gBAC3C,OAAO;AACL,qCAAAA,QAAK,KAAK;oBACR,MAAM;oBACN,OAAO;oBACP,MAAM;mBACP;gBACH;cACF;YACF,CAAC;UACH;UACA,OAAO,CAAC,QAAO;AACb,oBAAQ,MAAM,GAAG;AACjB,+BAAAA,QAAK,KAAK;cACR,MAAM;cACN,OAAO;cACP,MAAM;aACP;UACH;SACD;MACL;MAGE,uBAAoB;AAChB,YAAI,KAAK,SAAS,UAAU;AAC1B,eAAK,OAAO,SAAS,CAAC,mBAAmB,CAAC;QAC5C,WAAW,KAAK,SAAS,SAAS;AAChC,eAAK,OAAO,SAAS,CAAC,kBAAkB,CAAC;QAC3C,WACS,KAAK,QAAM,SAAQ;AAC1B,eAAK,OAAO,SAAS,CAAC,kBAAkB,CAAC;QAC3C,OAAM;AACJ,gBAAM,cAAc;QACtB;MACJ;;;;;;AAzHW,iBAAU,WAAA;MANtB,UAAU;QACT,UAAU;QACV,SAAS,CAAC,aAAY,YAAY;QAClC,UAAA;;OAED;OACY,UAAU;;;;;ACbvB;;;AAEA,IAAAC;AAEA,aAAS,cAAc,MAAK;AAC1B,UAAI;AACJ,UAAI;AAEJ,iBAAW,MAAW;AACpB,cAAM,QAAQ,uBAAuB;UACnC,SAAS,CAAC,UAAU;SACrB,EACA,kBAAiB;AAElB,kBAAU,QAAQ,gBAAgB,UAAU;AAC5C,oBAAY,QAAQ;AACpB,gBAAQ,cAAa;MACvB,EAAC;AAED,SAAG,iBAAiB,MAAK;AACvB,eAAO,SAAS,EAAE,WAAU;MAC9B,CAAC;IACH,CAAC;;;",
  "names": ["donatebook_default", "init_donatebook", "DonateBook", "Swal", "init_donatebook"]
}
