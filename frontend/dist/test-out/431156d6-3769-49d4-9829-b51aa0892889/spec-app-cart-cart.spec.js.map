{
  "version": 3,
  "sources": ["angular:jit:template:src/app/cart/cart.html", "angular:jit:style:src/app/cart/cart.css", "src/app/cart/cart.ts", "src/app/cart/cart.spec.ts"],
  "sourcesContent": ["\n\n\n\n\n\n\n\n\n\n<div class=\"container-fluid mt-4 \" >\n  <div class=\"d-flex justify-content-between align-items-center\">\n    <h2>Your Cart</h2>\n    <button class=\"btn btn-danger\" (click)=\"clearCart()\">Clear Cart \uD83D\uDDD1\uFE0F</button>\n  </div>\n\n  <div *ngIf=\"cartItems.length === 0\" class=\"alert alert-info text-center mt-4\">\n    Add books to cart \uD83D\uDCDA\n  </div>\n\n  <div *ngFor=\"let item of cartItems\" class=\"card mb-3 shadow-sm\">\n    <div class=\"row no-gutters align-items-center\">\n      \n      <!-- Image section -->\n      <div class=\"col-md-2\">\n        <img src=\"/books.webp\" class=\"img-fluid rounded-start\" alt=\"Book Image\" />\n      </div>\n\n      <!-- Details section -->\n      <div class=\"col-md-7\">\n        <!-- <div class=\"card-body\">\n          <h5 class=\"card-title\">Title: {{ item.title }}</h5>\n          <p class=\"card-text mb-1\"><strong>Author:</strong> {{ item.author }}</p>\n\n          <label for=\"qty\">Quantity:</label>\n          <input\n            type=\"number\"\n            min=\"1\"\n            [(ngModel)]=\"item.quantity\"\n            class=\"form-control form-control-sm\"\n            style=\"width: 100px; display: inline-block;\"\n          />\n        </div> -->\n        <div class=\"card-body\">\n  <h5 class=\"card-title\">Title: {{ item.title }}</h5>\n  <p class=\"card-text mb-1\"><strong>Author:</strong> {{ item.author }}</p>\n\n  \n\n  <div class=\"d-flex align-items-center mb-2\">\n  <label for=\"qty\" class=\"me-2 mb-0\"><strong>Quantity:</strong></label>\n\n  <div class=\"input-group\" style=\"width: 130px;\">\n    <button class=\"btn btn-outline-secondary\" type=\"button\" (click)=\"decreaseQuantity(item)\">\u2212</button>\n    <input\n      type=\"number\"\n      min=\"1\"\n      [(ngModel)]=\"item.quantity\"\n      class=\"form-control text-center\"\n    />\n    <button class=\"btn btn-outline-secondary\" type=\"button\" (click)=\"increaseQuantity(item)\">+</button>\n  </div>\n</div>\n\n</div>\n\n      </div>\n\n      <!-- Update button -->\n      <!-- <div class=\"col-md-3 text-center\">\n        <button class=\"btn btn-primary mt-4\" (click)=\"updateItem(item)\">\n          Update\n        </button>\n      </div> -->\n<div class=\"col-md-3 text-center\">\n  <div class=\"d-flex justify-content-center align-items-center gap-2 mt-4\">\n    <button class=\"btn btn-success\" (click)=\"updateItem(item)\">\n      Update\n    </button>\n    <button class=\"btn btn-outline-danger\" (click)=\"removeItem(item)\">\n      Remove \n    </button>\n  </div>\n</div>\n\n    </div>\n  </div>\n</div>\n", "/* src/app/cart/cart.css */\n.card {\n  border-radius: 10px;\n}\n.card img {\n  max-height: 150px;\n  object-fit: cover;\n}\nh2 {\n  margin-bottom: 20px;\n  text-align: center;\n}\n.card {\n  background-color: #1e1e1e;\n  color: #ffffff;\n}\ninput,\n.form-control {\n  background-color: #2c2c2c;\n  color: #ffffff;\n  border: 1px solid #444;\n}\nbody {\n  background-color: #000000 !important;\n  color: #ffffff;\n}\n/*# sourceMappingURL=cart.css.map */\n", "\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-cart',\n  imports: [FormsModule,CommonModule],\n  templateUrl: './cart.html',\n  styleUrl: './cart.css'\n})\nexport class Cart implements OnInit {\n\n  cartItems: any[] = [];\n\n  constructor(private http: HttpClient) {}\n\n  ngOnInit(): void {\n    this.loadCart();\n  }\n\n  loadCart(): void {\n    const token = localStorage.getItem('token');\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n\n    this.http.get<any[]>('http://localhost:8080/buyer/cart/view', { headers }).subscribe({\n      next: (res) => {\n        this.cartItems = res;\n        console.log(this.cartItems)\n        // Initialize quantity if needed\n        this.cartItems.forEach(item => {\n          if (!item.quantity) item.quantity = 1;\n        });\n      },\n      error: (err) => {\n        console.error('Error loading cart:', err);\n      }\n    });\n  }\n\nupdateItem(item: any): void {\n  const token = localStorage.getItem('token');\n  const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n\n  const payload = {\n    bookId: item.bookId,     // Ensure this property exists in your response\n    quantity: item.quantity  // Updated quantity bound via ngModel\n  };\n\n  this.http.put('http://localhost:8080/buyer/cart/update', payload, { headers })\n    .subscribe({\n      next: () => {\n        alert('Quantity updated successfully!');\n        this.loadCart(); // Refresh cart if needed\n      },\n      error: (err) => {\n        console.error('Update failed', err);\n        alert('Failed to update quantity');\n      }\n    });\n}\n\nclearCart() {\n    const token = localStorage.getItem('token');\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n    this.http.delete('http://localhost:8080/buyer/cart/clear', { headers }).subscribe(\n      (response) => {\n        this.cartItems = [];\n        alert('Cart cleared successfully');\n      },\n      (error) => {\n        console.error('Error clearing cart', error);\n      }\n    );\n  }\n\n  removeItem(item: any): void {\n    const token = localStorage.getItem('token');\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n\n  this.http.delete('http://localhost:8080/buyer/cart/remove', {\n    headers,\n    body: { bookId: item.bookId }\n  }).subscribe({\n    next: () => {\n      this.cartItems = this.cartItems.filter(cart => cart.bookId !== item.bookId);\n    },\n    error: err => {\n      console.error('Error removing item:', err);\n    }\n  });\n}\n\nincreaseQuantity(item: any): void {\n  item.quantity = (item.quantity || 1) + 1;\n}\n\ndecreaseQuantity(item: any): void {\n  if (item.quantity > 1) {\n    item.quantity--;\n  }\n}\n\n\n}\n", "import { ComponentFixture, TestBed } from '@angular/core/testing';\n\nimport { Cart } from './cart';\n\ndescribe('Cart', () => {\n  let component: Cart;\n  let fixture: ComponentFixture<Cart>;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      imports: [Cart]\n    })\n    .compileComponents();\n\n    fixture = TestBed.createComponent(Cart);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n});\n"],
  "mappings": "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",
  "names": ["cart_default", "init_cart", "Cart", "init_cart"]
}
