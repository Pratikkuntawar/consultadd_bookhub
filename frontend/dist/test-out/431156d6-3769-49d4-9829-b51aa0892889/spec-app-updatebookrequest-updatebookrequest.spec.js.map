{
  "version": 3,
  "sources": ["angular:jit:template:src/app/updatebookrequest/updatebookrequest.html", "angular:jit:style:src/app/updatebookrequest/updatebookrequest.css", "src/app/updatebookrequest/updatebookrequest.ts", "src/app/updatebookrequest/updatebookrequest.spec.ts"],
  "sourcesContent": ["\n<div class=\"home-container\" style=\"background-color: #000; min-height: 100vh; padding: 20px;\">\n  <!-- <input\n    [(ngModel)]=\"searchId\"\n    (keyup.enter)=\"searchUser()\"\n    type=\"number\"\n    placeholder=\"Enter Book Request ID\"\n    class=\"search-bar\"\n  /> this input and searchuser() approverequest and rejectrequest() wale functions uncomment krna-->\n<!-- <div *ngFor=\"let user of filteredUsers\" class=\"user-card\" > -->\n  <div *ngFor=\"let user of pendingRequests\" class=\"user-card\">\n\n  <img src=\"/books.webp\" alt=\"User\" class=\"user-image\" />\n  <!-- <div class=\"user-details\">\n    <h5>{{ user.name }}</h5>\n    <p>\uD83E\uDDD1\u200D\uD83D\uDCBC Book ID: {{ user.id }}</p>\n    <p>\uD83D\uDCE7 Email: {{ user.email }}</p>\n    <p>\uD83D\uDCF1 Department: {{ user.department }}</p>\n    <p>\uD83E\uDDD1\u200D\uD83D\uDCBC Role: {{ user.role }}</p> -->\n <!-- </div> -->\n      <div class=\"user-details\">\n      <!-- <h5>Book Title:{{ user.title }}</h5>\n      <p>\uD83E\uDDD1\u200D\uD83D\uDCBC Author: {{ user.author}}</p>\n      <p>\uD83D\uDCE7 Reason: {{ user.reason}}</p>\n      <p>\uD83D\uDCF1 Requester ID: {{ user.requester.id}}</p>\n      <p>\uD83E\uDDD1\u200D\uD83D\uDCBC Request BY: {{ user.requester.fullName}}</p>\n      <p>Requester Email:{{user.requester.email}}</p> -->\n      <h5>\uD83D\uDCDA Book Title: {{ user.title }}</h5>\n      <h5>Donation Id:{{user.id}}</h5>\n<p>\u270D\uFE0F Author: {{ user.author }}</p>\n<p>\uD83D\uDCDD Reason: {{ user.reason }}</p>\n<p>\uD83C\uDD94 Requester ID: {{ user.requester.id }}</p>\n<p>\uD83D\uDE4B Request By: {{ user.requester.fullName }}</p>\n<p>\uD83D\uDCE7 Requester Email: {{ user.requester.email }}</p>\n    </div>\n    <div class=\"action-buttons\">\n      <img\n        src=\"/checked.png\"\n        alt=\"Approve\"\n        class=\"action-icon\"\n        (click)=\"approveRequest(user.id)\"\n      />\n      <img\n        src=\"/delete-button.png\"\n        alt=\"Reject\"\n        class=\"action-icon\"\n        (click)=\"rejectRequest(user.id )\"\n      />\n  </div>\n</div>\n</div>\n", "/* src/app/updatebookrequest/updatebookrequest.css */\nbody,\n.home-container {\n  background-color: #000000;\n  min-height: 100vh;\n  padding: 1rem;\n}\n.user-card {\n  display: flex;\n  align-items: center;\n  background-color: #ffffff;\n  color: #000000;\n  border-radius: 12px;\n  padding: 16px;\n  margin-bottom: 16px;\n  box-shadow: 0 4px 8px rgba(255, 255, 255, 0.1);\n  width: 100%;\n}\n.user-image {\n  width: 80px;\n  height: 80px;\n  margin-right: 20px;\n  border-radius: 50%;\n  object-fit: cover;\n}\n.user-details h5 {\n  margin: 0 0 8px 0;\n  font-size: 1.25rem;\n}\n.user-card {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background-color: #ffffff;\n  color: #000000;\n  border-radius: 12px;\n  padding: 16px;\n  margin-bottom: 16px;\n  box-shadow: 0 4px 8px rgba(255, 255, 255, 0.1);\n  width: 100%;\n}\n.user-details {\n  flex: 1;\n}\n.user-details p {\n  margin: 2px 0;\n}\n.search-bar {\n  width: 50%;\n  padding: 10px;\n  margin-bottom: 20px;\n  font-size: 16px;\n  border: none;\n  border-radius: 8px;\n  justify-content: center;\n}\n.search-bar {\n  width: 40%;\n  padding: 10px;\n  margin-bottom: 20px;\n  font-size: 16px;\n  border: none;\n  border-radius: 8px;\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  border-color: green;\n  box-shadow: 2px solid red;\n}\n.user-image {\n  width: 80px;\n  height: 80px;\n  margin-right: 20px;\n}\n.user-details h5 {\n  margin: 0 0 10px;\n}\ninput::placeholder {\n  text-align: center;\n}\n.action-buttons {\n  display: flex;\n  gap: 20px;\n  margin-left: auto;\n  align-items: center;\n}\n.action-icon {\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n  transition: transform 0.2s ease;\n}\n.action-icon:hover {\n  transform: scale(1.2);\n}\n.user-card {\n  background-color: #fff;\n  border-radius: 10px;\n  padding: 20px;\n  margin-bottom: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  box-shadow: 0 4px 8px rgba(255, 255, 255, 0.2);\n}\n.user-image {\n  width: 80px;\n  height: 80px;\n  margin-right: 20px;\n  border-radius: 50%;\n  object-fit: cover;\n}\n.user-details {\n  flex-grow: 1;\n}\n.user-details h5 {\n  margin: 0 0 10px;\n}\ninput::placeholder {\n  text-align: center;\n}\n.action-buttons {\n  display: flex;\n  gap: 20px;\n  align-items: center;\n}\n.action-icon {\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n  transition: transform 0.2s ease;\n}\n.action-icon:hover {\n  transform: scale(1.2);\n}\n/*# sourceMappingURL=updatebookrequest.css.map */\n", "import { CommonModule } from '@angular/common';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\n@Component({\n  selector: 'app-updatebookrequest',\n  imports: [FormsModule,CommonModule],\n  templateUrl: './updatebookrequest.html',\n  styleUrl: './updatebookrequest.css'\n})\nexport class Updatebookrequest implements OnInit{\nusers: any[] = [];\n  filteredUsers: any[] = [];\n  searchId: number | null = null;\nconstructor(private http: HttpClient) {}\n  // ngOnInit(): void {\n  //   this.users = [\n  //     { id: 1, name: 'John Doe', email: 'kuntawarpratik4@gmail.com', department: 'Coding', role: 'Admin' },\n  //     { id: 2, name: 'Jane Smith', email: 'ramlakhan4@gmail.com', department: 'Coding', role: 'Buyer' },\n  //     { id: 3, name: 'Michael Johnson', email: 'dhruvpatel@gmail.com', department: 'HR', role: 'Seller' },\n  //     { id: 4, name: 'Ram Kapoor', email: 'ramkapoor@gmail.com', department: 'HR', role: 'Seller' },\n  //     { id: 5, name: 'Rohit Sharma', email: 'rohitsharma@gmail.com', department: 'Coding', role: 'ADMIN' }\n  //   ];\n\n  //   this.filteredUsers = [...this.users]; // Initially show all users\n  // }\nngOnInit(): void {\n  this.loadAllRequests();\n}\nloadAllRequests(): void {\n  const token = localStorage.getItem('token');\n  const apiUrl = 'http://localhost:8080/api/book-requests/all';\n\n  if (token) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    });\n\n    this.http.get<any[]>(apiUrl, { headers }).subscribe({\n      next: (data) => {\n        console.log('Fetched Employees:', data);\n        this.users = data;\n        this.filteredUsers = [...this.users]; // Initially show all users\n      },\n      error: (error) => {\n        console.error('Failed to fetch employees:', error);\n      }\n    });\n  } else {\n    console.warn('No token found. Please login first.');\n  }\n}\n\n// searchUser() {\n//   const url = `http://localhost:8080/api/book-requests/employee/${this.searchId}`;\n//   const token = localStorage.getItem('token');\n//   const headers = new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'Authorization': `Bearer ${token}`\n//       });\n\n//   this.http.get<any[]>(url, { headers }).subscribe(\n//     data => this.filteredUsers = data,\n//     error => console.error('Error fetching data:', error)\n//   );\n// }\n\n// approveRequest(requestId: number) {\n//   const url = `http://localhost:8080/api/book-requests/approve/${requestId}`;\n//   const token = localStorage.getItem('token');\n//   const headers = new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'Authorization': `Bearer ${token}`\n//       });\n\n//   this.http.put(url,{ headers }).subscribe(\n//     () => {\n//       this.filteredUsers = this.filteredUsers.filter(u => u.id !== requestId);\n//       alert('Request approved!');\n//     },\n//     error => console.error('Error approving request:', error)\n//   );\n// }\n\n// rejectRequest(requestId: number) {\n//   const url = `http://localhost:8080/api/book-request/reject/${requestId}`;\n//   const token = localStorage.getItem('token');\n//   const headers = new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'Authorization': `Bearer ${token}`\n//       });\n\n//   this.http.put(url, { headers }).subscribe(\n//     () => {\n//       this.filteredUsers = this.filteredUsers.filter(u => u.id !== requestId);\n//       alert('Request rejected!');\n//     },\n//     error => console.error('Error rejecting request:', error)\n//   );\n// }\n//upar wala code user krna\napproveRequest(donationId: number) {\n  const url = `http://localhost:8080/api/book-requests/approve/${donationId}`;\n  const token = localStorage.getItem('token');\n  const headers = new HttpHeaders({\n    'Content-Type': 'application/json',\n    'Authorization': `Bearer ${token}`\n  });\n\n  this.http.put(url, {}, { headers }).subscribe(\n    () => {\n      this.users= this.users.filter(r => r.donationId !== donationId);\n      alert('Request approved!');\n      this.loadAllRequests();\n    },\n    error => console.error('Error approving request:', error)\n  );\n}\n\nrejectRequest(donationId: number) {\n  const url = `http://localhost:8080/api/book-requests/reject/${donationId}`;\n  const token = localStorage.getItem('token');\n  const headers = new HttpHeaders({\n    'Content-Type': 'application/json',\n    'Authorization': `Bearer ${token}`\n  });\n\n  this.http.put(url, {}, { headers }).subscribe(\n    () => {\n      this.users= this.users.filter(r => r.id !== donationId);\n      alert('Request rejected!');\n      this.loadAllRequests();\n    },\n    error => console.error('Error rejecting request:', error)\n  );\n}\nget pendingRequests() {\n  return this.filteredUsers.filter(user => user.status === 'PENDING');\n}\n\n\n  // searchUser() {\n  //   const url = `http://localhost:8080/book-request/employee/${this.searchId}`;\n  //   this.http.get<any[]>(url).subscribe(\n  //     data => this.filteredUsers = data,\n  //     error => console.error('Error fetching data:', error)\n  //   );\n  // }\n\n  // approveRequest(requestId: number) {\n  //   const url = `http://localhost:8080/book-request/approve/${requestId}`;\n  //   this.http.put(url, {}).subscribe(\n  //     () => {\n  //       this.filteredUsers = this.filteredUsers.filter(u => u.id !== requestId);\n  //       alert('Request approved!');\n  //     },\n  //     error => console.error('Error approving request:', error)\n  //   );\n  // }\n\n  // rejectRequest(requestId: number) {\n  //   const url = `http://localhost:8080/book-request/reject/${requestId}`;\n  //   this.http.put(url, {}).subscribe(\n  //     () => {\n  //       this.filteredUsers = this.filteredUsers.filter(u => u.id !== requestId);\n  //       alert('Request rejected!');\n  //     },\n  //     error => console.error('Error rejecting request:', error)\n  //   );\n  // }\n  // searchUser(): void {\n  //   if (this.searchId == null || this.searchId.toString().trim() === '') {\n  //     this.filteredUsers = [...this.users]; // Show all if empty input\n  //     return;\n  //   }\n\n  //   const found = this.users.filter(user => user.id === this.searchId);\n\n  //   if (found.length > 0) {\n  //     this.filteredUsers = found;\n  //   } else {\n  //     alert('No Result Found');\n  //     this.filteredUsers = [...this.users];\n  //   }\n  // }\n\n//   approveRequest(id: number) {\n//   console.log('Approved ID:', id);\n//   alert(\"cart has been approved\")\n//   // Call your backend API or logic to approve\n// }\n\n// rejectRequest(id: number) {\n//   console.log('Rejected ID:', id);\n//   alert(\"card has been deleted\")\n//   // Call your backend API or logic to reject\n// }\n}\n", "import { ComponentFixture, TestBed } from '@angular/core/testing';\n\nimport { Updatebookrequest } from './updatebookrequest';\n\ndescribe('Updatebookrequest', () => {\n  let component: Updatebookrequest;\n  let fixture: ComponentFixture<Updatebookrequest>;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      imports: [Updatebookrequest]\n    })\n    .compileComponents();\n\n    fixture = TestBed.createComponent(Updatebookrequest);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n});\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,IAAAA;AAAA,IAAAC,0BAAA;AAAA;AAAA,IAAAD,6BAAA;AAAA;AAAA;;;ICWa;;;;;;;AAXb;AACA;AACA;AACA;AAQO,IAAM,oBAAN,MAAME,mBAAiB;MAIV;MAHpB,QAAe,CAAA;MACb,gBAAuB,CAAA;MACvB,WAA0B;MAC5B,YAAoB,MAAgB;AAAhB,aAAA,OAAA;MAAmB;;;;;;;;;;;MAYvC,WAAQ;AACN,aAAK,gBAAe;MACtB;MACA,kBAAe;AACb,cAAM,QAAQ,aAAa,QAAQ,OAAO;AAC1C,cAAM,SAAS;AAEf,YAAI,OAAO;AACT,gBAAM,UAAU,IAAI,YAAY;YAC9B,gBAAgB;YAChB,iBAAiB,UAAU,KAAK;WACjC;AAED,eAAK,KAAK,IAAW,QAAQ,EAAE,QAAO,CAAE,EAAE,UAAU;YAClD,MAAM,CAAC,SAAQ;AACb,sBAAQ,IAAI,sBAAsB,IAAI;AACtC,mBAAK,QAAQ;AACb,mBAAK,gBAAgB,CAAC,GAAG,KAAK,KAAK;YACrC;YACA,OAAO,CAAC,UAAS;AACf,sBAAQ,MAAM,8BAA8B,KAAK;YACnD;WACD;QACH,OAAO;AACL,kBAAQ,KAAK,qCAAqC;QACpD;MACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAkDA,eAAe,YAAkB;AAC/B,cAAM,MAAM,mDAAmD,UAAU;AACzE,cAAM,QAAQ,aAAa,QAAQ,OAAO;AAC1C,cAAM,UAAU,IAAI,YAAY;UAC9B,gBAAgB;UAChB,iBAAiB,UAAU,KAAK;SACjC;AAED,aAAK,KAAK,IAAI,KAAK,CAAA,GAAI,EAAE,QAAO,CAAE,EAAE,UAClC,MAAK;AACH,eAAK,QAAO,KAAK,MAAM,OAAO,OAAK,EAAE,eAAe,UAAU;AAC9D,gBAAM,mBAAmB;AACzB,eAAK,gBAAe;QACtB,GACA,WAAS,QAAQ,MAAM,4BAA4B,KAAK,CAAC;MAE7D;MAEA,cAAc,YAAkB;AAC9B,cAAM,MAAM,kDAAkD,UAAU;AACxE,cAAM,QAAQ,aAAa,QAAQ,OAAO;AAC1C,cAAM,UAAU,IAAI,YAAY;UAC9B,gBAAgB;UAChB,iBAAiB,UAAU,KAAK;SACjC;AAED,aAAK,KAAK,IAAI,KAAK,CAAA,GAAI,EAAE,QAAO,CAAE,EAAE,UAClC,MAAK;AACH,eAAK,QAAO,KAAK,MAAM,OAAO,OAAK,EAAE,OAAO,UAAU;AACtD,gBAAM,mBAAmB;AACzB,eAAK,gBAAe;QACtB,GACA,WAAS,QAAQ,MAAM,4BAA4B,KAAK,CAAC;MAE7D;MACA,IAAI,kBAAe;AACjB,eAAO,KAAK,cAAc,OAAO,UAAQ,KAAK,WAAW,SAAS;MACpE;;;;;AAjIa,wBAAiB,WAAA;MAN7B,UAAU;QACT,UAAU;QACV,SAAS,CAAC,aAAY,YAAY;QAClC,UAAA;;OAED;OACY,iBAAiB;;;;;ACX9B;;;AAEA,IAAAC;AAEA,aAAS,qBAAqB,MAAK;AACjC,UAAI;AACJ,UAAI;AAEJ,iBAAW,MAAW;AACpB,cAAM,QAAQ,uBAAuB;UACnC,SAAS,CAAC,iBAAiB;SAC5B,EACA,kBAAiB;AAElB,kBAAU,QAAQ,gBAAgB,iBAAiB;AACnD,oBAAY,QAAQ;AACpB,gBAAQ,cAAa;MACvB,EAAC;AAED,SAAG,iBAAiB,MAAK;AACvB,eAAO,SAAS,EAAE,WAAU;MAC9B,CAAC;IACH,CAAC;;;",
  "names": ["updatebookrequest_default", "init_updatebookrequest", "Updatebookrequest", "init_updatebookrequest"]
}
